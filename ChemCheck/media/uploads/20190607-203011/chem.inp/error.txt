mkdir -p testing/coverage
rm -rf testing/coverage/*
nosetests --nocapture --nologcapture --all-modules -A 'not functional' --verbose --with-coverage --cover-inclusive --cover-package=rmgpy --cover-erase --cover-html --cover-html-dir=testing/coverage --exe rmgpy arkane
Using Theano backend.
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/APIInterface.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/CSRformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/MCDLformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/MNAformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/PQSformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/abinitformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/acesformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/acrformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/adfformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/alchemyformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/amberformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/aoforceformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/asciiformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/balstformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/bgfformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/boxformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cacaoformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cacheformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/carformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/castepformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cccformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cdxmlformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chem3dformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chemdoodlejsonformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chemdrawcdx.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chemdrawct.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chemkinformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/chemtoolformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cifformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cmlformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cmlreactformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/confabreport.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/copyformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/crkformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/crystal09format.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/cssrformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/daltonformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/dlpolyformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/dmolformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/exyzformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fastaformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fastsearchformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fchkformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/featformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fhformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fhiaimsformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fingerprintformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/fpsformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/freefracformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gamessformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gamessukformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gausscubeformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gaussformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gausszmatformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/ghemicalformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/groformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gromos96format.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/gulpformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/hinformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/inchiformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/jaguarformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/lmpdatformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/lpmdformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mdffformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mdlformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mmcifformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mmodformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mol2format.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/moldenformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/molproformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/molreport.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mopacformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mpdformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/mpqcformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/msiformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/msmsformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/nulformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/nwchemformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/opendxformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/orcaformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/outformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/painterformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pcmodelformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pdbformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pdbqtformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/png2format.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pngformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pointcloudformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/posformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/povrayformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pqrformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pubchem.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pubchemjsonformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/pwscfformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/qchemformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/reportformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/rsmiformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/rxnformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/shelxformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/siestaformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/smilesformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/smileyformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/stlformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/svgformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/textformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/thermoformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/tinkerformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/titleformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/turbomoleformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/unichemformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/vaspformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/viewmolformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/xedformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/xmlformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/xsfformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/xtcformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/xyzformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/yasaraformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
==============================
*** Open Babel Error  in openLib
  /home/chao/anaconda2/envs/rmg_env/lib/openbabel/2.4.1/zindoformat.so did not load properly.
 Error: libXrender.so.1: cannot open shared object file: No such file or directory
Could not import MUQ.  Please check that it is installed correctly before using the global uncertainty modules.
Test that after loading chemkin files, species such as N2, which is in the default ... ok
This example tests if family and templates info can be correctly ... ok
This example is mainly to ensure comments like ... ok
Test that a Chemkin reaction with a specific species as a third body collider can be properly read ... ok
Test that we can write to chemkin and recreate the same transport object ... ok
Test that the official chemkin names are used as labels for the created Species objects. ... ok
Test that we can properly mark duplicate reactions for Chemkin. ... WARNING:root:Marked reaction CC <=> [CH3] + [CH3] as duplicate of CC <=> [CH3] + [CH3] for saving to Chemkin file.
WARNING:root:Marked reaction CC => C[CH2] + [H] as duplicate of CC => C[CH2] + [H] for saving to Chemkin file.
WARNING:root:Marked reaction CC + [OH] <=> C[CH2] + O as not duplicate because of mixed pressure dependence for saving to Chemkin file.
WARNING:root:Marked reaction O => [OH] + [H] as not duplicate because they are irreversible in opposite directions for saving to Chemkin file.
ok
Test that duplicate reactions are handled correctly when ... ok
Test that invalid element count logs the appropriate warning. ... ok
Test that missing temperature range can be handled for thermo entry. ... ok
Test that non-float parameters log the appropriate warning. ... ok
Test that non gas phase data logs the appropriate warning. ... ok
Test that the degeneracy is picked up from reading reaction comments. ... ok
Test that the family is picked up from reading reaction comments. ... ok
Test that the template is picked up from reading reaction comments. ... ok
tests that _removeLineBreaks functions properly ... ok
Test the value of the atomic mass unit. ... ok
Test the value of the Avogadro constant. ... ok
Test the value of the Bohr radius. ... ok
Test the value of the Boltzmann constant. ... ok
Test the value of the electron rest mass. ... ok
Test the value of the elementary charge constant. ... ok
Test the value of the gas law constant. ... ok
Test the value of the Hartree energy. ... ok
Test the value of the neutron rest mass. ... ok
Test the value of pi. ... ok
Test the value of the Planck constant. ... ok
Test the value of the proton rest mass. ... ok
Test the value of the reduced Planck constant. ... ok
Test the value of the speed of light in a vacuum. ... ok
Test that we can constrain the max number of singlet carbenes. ... ok
Test that we can constrain the max number of radical electrons with a carbene. ... ok
Test that we can constrain the max number of carbon atoms. ... ok
Test what happens when constraints are not loaded. ... ok
Test that we can explicitly allow molecules in species constraints. ... ok
Test that we can constrain the max number of heavy atoms. ... ok
Test that we can constrain the max number of nitrogen atoms. ... ok
Test that we can constrain the max number of oxygen atoms. ... ok
Test that we can constrain the max number of radical electrons. ... ok
Test that we can constrain the max number of silicon atoms. ... ok
Test that failsSpeciesConstraints can handle a Species object. ... ok
Test that we can constrain the max number of sulfur atoms. ... ok
Test that nodes can match other nodes. ... ok
Test that the MatchNodeToStructure family works properly. ... ok
Test that we can load and check a forbidden group. ... ok
Test that we can load and check a forbidden molecule. ... ok
Test that we can load and check a forbidden species. ... ok
Test the getBackboneRoots() function ... ok
Test the getEndRoots() function ... ok
Test the getTopLevelGroups() function ... ok
Test that hydrogen addition to benzene (w/ benzene bonds) returns kekulized product. ... ok
Test that hydrogen addition to phenanthrene (w/ benzene bonds) returns kekulized product. ... ok
This tests the the family.save method by writing a new temporary file and ... ok
Test that the 1,2_shiftC family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the 6_membered_central_C-C_shift family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the H_Abstraction family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the Intra_R_Add_Exo_scission family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the Intra_ene_reaction family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the intra_H_migration family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the intra_substitutionS_isomerization family, which is its own reverse, returns a properly re-labeled product structure. ... ok
Test that the R_addition_COm family, whose product template is generated by ... ok
WARNING:root:Requested depository /home/chao/RMG-Py/rmgpy/test_data/testing_database/kinetics/families/Surface_Dissociation_vdW/training/reactions.py does not exist
Test that we can add atom labels to an existing reaction ... ok
Test that we can automatically debug when a reverse reaction is forbidden. ... ok
Test that the Singlet_Val6_to_triplet and 1,2-Birad_to_alkene families generate irreversible reactions. ... ok
Test that __generateProductStructures() does not generate charged products ... ok
Test that we get no reactions for reactant/template size mismatch ... ok
Test that we get no reactions for reactant/template size mismatch ... ok
WARNING:root:Requested depository /home/chao/RMG-Py/rmgpy/test_data/testing_database/kinetics/families/Surface_Dissociation_vdW/training/reactions.py does not exist
Test that the tree was properly cleared before generation ... ok
test tree generation process ... ok
test that the tree is structured properly ... ok
test that appropriate regularization dimensions have been identified ... ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-5", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-5 <=> C6H6-6
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-5': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ERROR:root:Problem with reactant Species(label="C6H6-7", molecule=[Molecule(SMILES="C1=CC=CCC=1")], molecularWeight=(78.1118,'amu')) in reaction C6H6-7 <=> C6H6-8
Traceback (most recent call last):
  File "rmgpy/reaction.py", line 525, in rmgpy.reaction.Reaction.getFreeEnergyOfReaction
    dGrxn -= reactant.getFreeEnergy(T)
  File "rmgpy/species.py", line 424, in rmgpy.species.Species.getFreeEnergy
    raise Exception('Unable to calculate free energy for species {0!r}: no thermo or statmech data available.'.format(self.label))
Exception: Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.
Exception Exception: Exception("Unable to calculate free energy for species 'C6H6-7': no thermo or statmech data available.",) in 'rmgpy.reaction.Reaction.getFreeEnergyOfReaction' ignored
ok
test that the tree is structured properly after regularization ... ok
test that there are six rules and each is under a different group ... /home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/scipy/optimize/minpack.py:787: OptimizeWarning: Covariance of the parameters could not be estimated
  category=OptimizeWarning)
ok
tests that kinetics libraries load properly and that ... ok
tests that save entry can run ... ok
Test that addAtomLabelsForReaction can identify reactions with resonance ... ok
Test that addAtomLabelsForReaction can identify reactions with identical references ... [Species(label="", molecule=[Molecule(SMILES="C=C=C")], molecularWeight=(40.0639,'amu')), Species(label="", molecule=[Molecule(SMILES="[CH]=C=C"), Molecule(SMILES="C#C[CH2]")], molecularWeight=(39.0559,'amu'))]
[Species(label="", molecule=[Molecule(SMILES="[CH]=C=C"), Molecule(SMILES="C#C[CH2]")], molecularWeight=(39.0559,'amu')), Species(label="", molecule=[Molecule(SMILES="C#CC")], molecularWeight=(40.0639,'amu'))]
ok
Test that addAtomLabelsForReaction can identify reactions with resonance and isotopes ... [Species(label="", molecule=[Molecule(SMILES="C=C=C")], molecularWeight=(41.0565,'amu')), Species(label="", molecule=[Molecule(SMILES="[CH]=C=C"), Molecule(SMILES="C#C[CH2]")], molecularWeight=(40.0485,'amu'))]
[Species(label="", molecule=[Molecule(SMILES="C=C=C")], molecularWeight=(41.0565,'amu')), Species(label="", molecule=[Molecule(SMILES="[CH]=C=C"), Molecule(SMILES="C#C[CH2]")], molecularWeight=(40.0485,'amu'))]
ok
tests that the calculateDegeneracy method gets the degeneracy correct for unreactive molecules ... ok
Ensure ensure_independent_atom_ids modifies atomlabels ... ok
Ensure ensure_independent_atom_ids does not generate resonance ... ok
Test that we can generate reactions from families without resonance structures ... ok
Test that we can specify the product resonance structure when generating reactions ... ok
Test that we can specify the no product resonance structure when generating reactions ... ok
Test that we can generate reactions from families with resonance structures ... ok
Test that we can generate reactions from libraries ... ok
Test that we can generate reactions from libraries specifying products ... ok
Test that reaction generation for Molecule objects works. ... ok
tests that the addReverseAttribute method gets the reverse degeneracy correct ... ok
testParseKinetics (rmgpy.data.kinetics.kineticsTest.TestKineticsCommentsParsing) ... ok
Test valid methods for loading kinetics families. ... WARNING:root:Requested depository /home/chao/RMG-Py/rmgpy/test_data/testing_database/kinetics/families/Surface_Dissociation_vdW/training/reactions.py does not exist
WARNING:root:Requested depository /home/chao/RMG-Py/rmgpy/test_data/testing_database/kinetics/families/Surface_Dissociation_vdW/training/reactions.py does not exist
WARNING:root:Requested depository /home/chao/RMG-Py/rmgpy/test_data/testing_database/kinetics/families/Surface_Dissociation_vdW/training/reactions.py does not exist
ok
Test invalid methods for loading kinetics families ... ok
Test that the proper degeneracy is calculated for H addition to benzene ... ok
Test that the proper degeneracy is calculated for H addition to methylnaphthalene ... ok
Test that the proper degeneracy is calculated for H + H recombination ... ok
Test that the proper degeneracy is calculated for phenyl + H recombination ... ok
Test that rxns with identical atom ids are not counted twice for degeneracy ... SKIP: WIP test failed: Expected 1 reactions, not 2 for [Species(label="", molecule=[Molecule(SMILES="[H]")], molecularWeight=(1.00794,'amu')), Species(label="", molecule=[Molecule(SMILES="C[CH]C=CC"), Molecule(SMILES="C[CH]C=CC")], molecularWeight=(69.125,'amu'))] in H_Abstraction.
Test that the proper degeneracy is calculated for ethyl + ethyl disproportionation ... ok
Test that the proper degeneracy is calculated for ethyl + labeled ethyl disproportionation ... ok
Test that the proper degeneracy is calculated for methyl + labeled methyl recombination ... ok
Test that the proper degeneracy is calculated for methyl + methyl recombination ... ok
Test that rxns with multiple transition states are kept as separate reactions ... ok
Test that reactions from different resonance structures are not kept. ... ok
Test that reactions from different transition states are marked as duplicates. ... ok
Test if degeneracy is correct when reacting different resonance structures. ... ok
tests identical reactants have the same kinetics than different reactants. ... ok
test that propyl propyl r-recombination is the same rate as propyl butyl ... ok
test_reaction_degeneracy_independent_of_generatereactions_direction ... ok
ensure rxns with multiple transition states are kept as separate reactions ... ok
WARNING:root:Reaction indices 13 and 15 were marked as duplicate.
test that getLibraryReactions loads reactions correctly ... ok
This tests the the library.save method by writing a new temporary file and ... WARNING:root:Reaction indices 13 and 15 were marked as duplicate.
ok
Test that a :class:Arrhenius kinetics object representing the high pressure limit rate ... ok
Test we can estimate solvation thermochemistry. ... ok
Test that for a given solvent viscosity and temperature we can calculate a solute's diffusivity ... ok
Test we can check whether the solvent is listed as one of the initial species in various scenarios ... ok
Test we can obtain solute parameters via group additivity for a molecule with lone pairs ... ok
Test we can calculate and set the McGowan volume for species containing H,C,O,N or S ... ok
Test we can obtain solute parameters via group additivity for a molecule with both lone ... ok
Test that we can obtain solute parameters via group additivity for an amide ... ok
Test we can obtain solute parameters via group additivity for ammonia ... ok
Test that we can obtain solute parameters via group additivity for CO. ... ok
Test we can estimate Abraham solute parameters correctly using group contributions ... ok
Test we can obtain solute parameters from a library ... ok
Test we can obtain solvent parameters from a library ... ok
Test that we can assign a proper solvent molecular structure when different formats are given ... [14:57:50] SMILES Parse Error: syntax error for input: '
1 C u0 p0 c0 {2,S} {4,S} {5,S} {6,S}
2 C u0 p0 c0 {1,S} {3,S} {7,S} {8,S}
3 O u0 p2 c0 {2,S} {9,S}
4 H u0 p0 c0 {1,S}
5 H u0 p0 c0 {1,S}
6 H u0 p0 c0 {1,S}
7 H u0 p0 c0 {2,S}
8 H u0 p0 c0 {2,S}
9 H u0 p0 c0 {3,S}
'
[14:57:50] SMILES Parse Error: syntax error for input: 'ring'
ok
Test we can calculate the solvent viscosity given a temperature and its A-E correlation parameters ... ok
testAddPolyRingCorrectionThermoDataFromHeuristicUsingAlkaneTricyclic (rmgpy.data.thermoTest.TestCyclicThermo) ... ok
testAddPolyRingCorrectionThermoDataFromHeuristicUsingAromaticTricyclic (rmgpy.data.thermoTest.TestCyclicThermo) ... ok
Test proper thermo estimation for highly unsaturated polycyclic whose decomposed ... ok
Test proper thermo estimation for highly unsaturated polycyclic whose decomposed ... ok
testAddPolyRingCorrectionThermoDataFromHeuristicUsingPyrene (rmgpy.data.thermoTest.TestCyclicThermo) ... ok
testAddRingCorrectionThermoDataFromTreeForExistingTricyclic (rmgpy.data.thermoTest.TestCyclicThermo) ... ok
The molecule being tested has two rings, one is 13cyclohexadiene5methylene ... ok
Test bicyclic correction estimated properly from heuristic formula ... ok
Test bicyclic correction estimated properly from heuristic formula ... ok
Test that getRingGroupsFromComments method works for fused polycyclics. ... ok
testIsRingPartialMatched (rmgpy.data.thermoTest.TestCyclicThermo) ... ok
Test that removing groups using nodes near the root of radical.py ... ok
Test a molecule that has both a polycyclic and a monocyclic ring in the same molecule ... ok
testBicyclicDecompositionForPolyringUsingAlkaneTricyclic (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
testBicyclicDecompositionForPolyringUsingAromaticTricyclic (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
testBicyclicDecompositionForPolyringUsingPyrene (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
This method tests the combineCycles method, which simply joins two lists ... ok
testCombineTwoRingsIntoSubMolecule (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
testConvertRingToSubMolecule (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
testFindAromaticBondsFromSubMolecule (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
This method tests the getCopyForOneRing method, which returns ... ok
testIsAromaticRing (rmgpy.data.thermoTest.TestMolecularManipulationInvolvedInThermoEstimation) ... ok
Test isBicyclic identifies bicyclic correctly ... ok
Test isBicyclic identifies bicyclic correctly ... ok
Test unsaturated bonds of "C1=CCC2=C1C2" to be saturated properly ... ok
Test unsaturated bonds of "C1=CC=C2CCCCC2=C1" to be saturated properly ... ok
Test unsaturated bonds of "C1=CC=C2CC=CCC2=C1" to be saturated properly ... ok
Test bicyclic molecule "C1=CCC2C1=C2" can be divided into ... ok
Test bicyclic molecule "C1=CCC2=C1C2" can be divided into ... ok
Test that if two non-overlapped rings lead to AssertionError ... ok
Test that the new ThermoDatabase generates appropriate thermo data. ... SKIP: WIP test failed: S298 error for C=CC=CCC. Expected 86.37, but calculated 88.55.
Test we generate symmetry numbers correctly. ... ok
Test long distance interaction is properly caculated for aromatic biradical. for Aromatics. ... ok
Test long distance interaction is properly caculated for aromatic molecule. for Aromatics. ... ok
Test long distance interaction is properly caculated for aromatic radical. for Aromatics. ... ok
Test that the new ThermoDatabase generates appropriate thermo data. for Aromatics. ... SKIP: WIP test failed: Can only generate resonance structures for reactive molecules! Got the following unreactive structure:
1  C u0 p0 c0 {2,D} {6,S} {7,S}
2  C u0 p0 c0 {1,D} {3,S} {8,S}
3  C u0 p0 c0 {2,S} {4,D} {9,S}
4  C u0 p0 c0 {3,D} {5,S} {10,S}
5  C u0 p0 c0 {4,S} {6,D} {11,S}
6  C u0 p0 c0 {1,S} {5,D} {12,S}
7  H u0 p0 c0 {1,S}
8  H u0 p0 c0 {2,S}
9  H u0 p0 c0 {3,S}
10 H u0 p0 c0 {4,S}
11 H u0 p0 c0 {5,S}
12 H u0 p0 c0 {6,S}
Reactive = False
Test we generate symmetry numbers correctly. for Aromatics. ... ok
testConnectFailure (rmgpy.data.thermoTest.TestThermoCentralDatabaseInterface) ... SKIP: Skipping TCD unit tests because database is offline.
testConnectSuccess (rmgpy.data.thermoTest.TestThermoCentralDatabaseInterface) ... SKIP: Skipping TCD unit tests because database is offline.
Test situation where both registration_table and results_table have no ... SKIP: Skipping TCD unit tests because database is offline.
Test situation where registration_table has species as the one going ... SKIP: Skipping TCD unit tests because database is offline.
Test situation where results_table has species as the one going ... SKIP: Skipping TCD unit tests because database is offline.
the species is non-cyclic, currently regarded no need to ... SKIP: Skipping TCD unit tests because database is offline.
the species is for non-cyclic, so no need to register in ... SKIP: Skipping TCD unit tests because database is offline.
the thermo is exact match, so no need to register in ... SKIP: Skipping TCD unit tests because database is offline.
the thermo is from library, so no need to register in ... SKIP: Skipping TCD unit tests because database is offline.
the thermo is matching generic node, so it needs to register in ... SKIP: Skipping TCD unit tests because database is offline.
the thermo is matching generic node, so it needs to register in ... SKIP: Skipping TCD unit tests because database is offline.
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_1 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_1 (MoleculeConv)    (None, 512)           85800       input_1[0][0]
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 50)            25650       moleculeconv_1[0][0]
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 1)             51          dense_1[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_2 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_2 (MoleculeConv)    (None, 512)           85800       input_2[0][0]
____________________________________________________________________________________________________
randommask_1 (RandomMask)        (None, 512)           0           moleculeconv_2[0][0]
____________________________________________________________________________________________________
dense_3 (Dense)                  (None, 50)            25650       randommask_1[0][0]
____________________________________________________________________________________________________
dense_4 (Dense)                  (None, 1)             51          dense_3[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_3 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_3 (MoleculeConv)    (None, 512)           85800       input_3[0][0]
____________________________________________________________________________________________________
randommask_2 (RandomMask)        (None, 512)           0           moleculeconv_3[0][0]
____________________________________________________________________________________________________
dense_5 (Dense)                  (None, 50)            25650       randommask_2[0][0]
____________________________________________________________________________________________________
dense_6 (Dense)                  (None, 7)             357         dense_5[0][0]
====================================================================================================
Total params: 111,807
Trainable params: 26,007
Non-trainable params: 85,800
____________________________________________________________________________________________________
Test that the ThermoDatabase.extractSourceFromComments function works properly ... ok
Test that a ThermoDatabase object can be successfully pickled and ... ok
Test thermo generation for species objects for HBI correction on group additivity value. ... ok
Test thermo generation for species objects for HBI correction on library value. ... ok
Test thermo generation for species objects for library value. ... ok
Test that `getThermoData` properly accounts for symmetry in thermo ... ok
Test that the symmetry contribution is correctly added for radicals ... ok
testThermoEstimationNotAffectDatabase (rmgpy.data.thermoTest.TestThermoDatabase) ... ok
Test that the thermo entry of nonreactive molecules isn't selected for a species, even if it's more stable ... ok
Test that getAllThermoData doesn't break when GAV fails. ... ok
Test that the thermo entry with the lowest H298 is selected for a species with resonance structurers ... ok
Test thermo generation for species objects based on ML estimation. ... ok
Test that thermo generation with ML correctly respects settings ... ok
testFailingLoadsThermoLibraries (rmgpy.data.thermoTest.TestThermoDatabaseLoading) ... ok
Test that the CriticalPointGroupContribution Pc property was properly set. ... ok
Test that the CriticalPointGroupContribution Tb property was properly set. ... ok
Test that the CriticalPointGroupContribution Tc property was properly set. ... ok
Test that the CriticalPointGroupContribution Vc property was properly set. ... ok
Test that a CriticalPointGroupContribution object can be pickled and unpickled with no loss of information. ... ok
Test that a CriticalPointGroupContribution object can be reconstructed from its repr() output with no loss of information ... ok
Test that the CriticalPointGroupContribution structureIndex property was properly set. ... ok
Test that we can retrieve transport properties from all sources for a species. ... ok
Test that we can retrieve best transport properties for a species. ... ok
Test transport property estimation via Joback groups. ... ok
Test Joback doesn't crash on Cb desription of benzene ... SKIP: WIP test failed: 'Node <Entry index=0 label="C_centered_ring"> has no parent with data in the transport database.'
Test that the Arrhenius A property was properly set. ... ok
Test that the Arrhenius Ea property was properly set. ... ok
Test that the Arrhenius T0 property was properly set. ... ok
Test that the Arrhenius Tmax property was properly set. ... ok
Test that the Arrhenius Tmin property was properly set. ... ok
Test the Arrhenius.changeRate() method. ... ok
Test the Arrhenius.changeT0() method. ... ok
Test that the Arrhenius comment property was properly set. ... ok
Test the Arrhenius.fitToData() method. ... ok
Test the Arrhenius.getRateCoefficient() method. ... ok
Test the Arrhenius.isTemperatureValid() method. ... ok
Test that the Arrhenius n property was properly set. ... ok
Test that an Arrhenius object can be pickled and unpickled with no loss ... ok
Test that an Arrhenius object can be reconstructed from its repr() ... ok
Tests that the Arrhenius object can be converted to ArrheniusEP ... ok
test_toArrheniusEP_throws_error_with_just_alpha (rmgpy.kinetics.arrheniusTest.TestArrhenius) ... ok
Tests that the Arrhenius object can be converted to ArrheniusEP given parameters ... ok
Test that the Arrhenius cantera object can be set properly within ... ok
Test that the ArrheniusEP A property was properly set. ... ok
Test that the ArrheniusEP E0 property was properly set. ... ok
Test that the ArrheniusEP Tmax property was properly set. ... ok
Test that the ArrheniusEP Tmin property was properly set. ... ok
Test that the ArrheniusEP alpha property was properly set. ... ok
Test the ArrheniusEP.changeRate() method. ... ok
Test that the ArrheniusEP comment property was properly set. ... ok
Test the ArrheniusEP.getRateCoefficient() method. ... ok
Test the ArrheniusEP.isTemperatureValid() method. ... ok
Test that the ArrheniusEP n property was properly set. ... ok
Test that an ArrheniusEP object can be pickled and unpickled with no loss ... ok
Test that an ArrheniusEP object can be reconstructed from its repr() ... ok
Test that the MultiArrhenius Tmax property was properly set. ... ok
Test that the MultiArrhenius Tmin property was properly set. ... ok
Test that the MultiArrhenius A property was properly set. ... ok
Test the MultiArrhenius.changeRate() method. ... ok
Test that the MultiArrhenius comment property was properly set. ... ok
Test the MultiArrhenius.getRateCoefficient() method. ... ok
Test the MultiArrhenius.isTemperatureValid() method. ... ok
Test that a MultiArrhenius object can be pickled and unpickled with no loss ... ok
Test that a MultiArrhenius object can be reconstructed from its repr() ... ok
Test that we can convert to an Arrhenius ... ok
Test the toArrhenius fitting multiple kinetics over a small range, see if we're within 5% at a few points ... ok
Test the toArrhenius temperature range is set correctly. ... ok
Test that the MultiPDepArrhenius Pmax property was properly set. ... ok
Test that the MultiPDepArrhenius Pmin property was properly set. ... ok
Test that the MultiPDepArrhenius Tmax property was properly set. ... ok
Test that the MultiPDepArrhenius Tmin property was properly set. ... ok
Test that the MultiPDepArrhenius arrhenius property was properly set. ... ok
Test the PDepMultiArrhenius.changeRate() method. ... ok
Test that the MultiPDepArrhenius comment property was properly set. ... ok
Test the MultiPDepArrhenius.getRateCoefficient() method. ... ok
Test the MultiPDepArrhenius.getRateCoefficient() when plists are different. ... ok
Test the MultiPDepArrhenius.isPressureValid() method. ... ok
Test the MultiPDepArrhenius.isTemperatureValid() method. ... ok
Test that a MultiPDepArrhenius object can be pickled and unpickled with ... ok
Test that a MultiPDepArrhenius object can be reconstructed from its ... ok
Test that the PDepArrhenius Pmax property was properly set. ... ok
Test that the PDepArrhenius Pmin property was properly set. ... ok
Test that the PDepArrhenius Tmax property was properly set. ... ok
Test that the PDepArrhenius Tmin property was properly set. ... ok
Test that the PDepArrhenius arrhenius property was properly set. ... ok
Test the PDepArrhenius.changeRate() method. ... ok
Test that the PDepArrhenius comment property was properly set. ... ok
Test the PDepArrhenius.fitToData() method. ... ok
Test the PDepArrhenius.getRateCoefficient() method. ... ok
Test the PDepArrhenius.isPressureDependent() method. ... ok
Test that a PDepArrhenius object can be successfully pickled and ... ok
Test that the PDepArrhenius pressures property was properly set. ... ok
Test that a PDepArrhenius object can be successfully reconstructed ... ok
Test that the Chebyshev Pmax property was properly set. ... ok
Test that the Chebyshev Pmin property was properly set. ... ok
Test that the Chebyshev Tmax property was properly set. ... ok
Test that the Chebyshev Tmin property was properly set. ... ok
Test the Chebyshev.changeRate() method. ... ok
Test that the Chebyshev coeffs property was properly set. ... ok
Test that the Chebyshev comment property was properly set. ... ok
Test the Chebyshev.fitToData() method. ... ok
Test the Chebyshev.fitToData() method throws error without enough degrees of freedom. ... ok
Test the Chebyshev.getRateCoefficient() method. ... ok
Test the Chebyshev.isPressureDependent() method. ... ok
Test that a Chebyshev object can be pickled and unpickled with no loss ... ok
Test that a Chebyshev object can be reconstructed from its repr() ... ok
Tests that the effective rate is limited in the forward direction for ... ok
Tests that the effective rate is limited for a 3 -> 2 reaction ... ok
Tests that the effective rate is the same as the intrinsic rate for ... ok
Test that the Lindemann Pmax property was properly set. ... ok
Test that the Lindemann Pmin property was properly set. ... ok
Test that the Lindemann Tmax property was properly set. ... ok
Test that the Lindemann Tmin property was properly set. ... ok
Test that the Lindemann arrheniusHigh property was properly set. ... ok
Test that the Lindemann arrheniusLow property was properly set. ... ok
Test the Lindemann.changeRate() method. ... ok
Test that the Lindemann comment property was properly set. ... ok
Test the Lindemann.getRateCoefficient() method. ... ok
Test the Lindemann.isPressureDependent() method. ... ok
Test that a Lindemann object can be pickled and unpickled with no loss ... ok
Test that a Lindemann object can be reconstructed from its repr() ... ok
Test that the ThirdBody Pmax property was properly set. ... ok
Test that the ThirdBody Pmin property was properly set. ... ok
Test that the ThirdBody Tmax property was properly set. ... ok
Test that the ThirdBody Tmin property was properly set. ... ok
Test that the ThirdBody arrhenius property was properly set. ... ok
Test the ThirdBody.changeRate() method. ... ok
Test that the ThirdBody comment property was properly set. ... ok
Test the getEffectiveColliderEfficiencies() method ... ok
Test the ThirdBody.getEffectivePressure() method. ... ok
Test the ThirdBody.getRateCoefficient() method. ... ok
Test the ThirdBody.isPressureDependent() method. ... ok
Test that a ThirdBody object can be successfully pickled and ... ok
Test that a ThirdBody object can be successfully reconstructed ... ok
Test that the Troe Pmax property was properly set. ... ok
Test that the Troe Pmin property was properly set. ... ok
Test that the Troe T1 property was properly set. ... ok
Test that the Troe T2 property was properly set. ... ok
Test that the Troe T3 property was properly set. ... ok
Test that the Troe Tmax property was properly set. ... ok
Test that the Troe Tmin property was properly set. ... ok
Test that the Troe alpha property was properly set. ... ok
Test that the Troe arrheniusHigh property was properly set. ... ok
Test that the Troe arrheniusLow property was properly set. ... ok
Test the Troe.changeRate() method. ... ok
Test that the Troe comment property was properly set. ... ok
Test the Troe.getRateCoefficient() method. ... ok
Test the Troe.isPressureDependent() method. ... ok
Test that a Troe object can be pickled and unpickled with no loss of ... ok
Test that a Troe object can be reconstructed from its repr() output ... ok
Test that the KineticsData Tdata property was properly set. ... ok
Test that the KineticsData Tmax property was properly set. ... ok
Test that the KineticsData Tmin property was properly set. ... ok
Test that the KineticsData comment property was properly set. ... ok
Test the KineticsData.getRateCoefficient() method. ... ok
Test the KineticsData.isTemperatureValid() method. ... ok
Test that the KineticsData kdata property was properly set. ... ok
Test that a KineticsData object can be pickled and unpickled with no ... ok
Test that a KineticsData object can be reconstructed from its repr() ... ok
Test that the PDepKineticsData Pdata property was properly set. ... ok
Test that the PDepKineticsData Pmax property was properly set. ... ok
Test that the PDepKineticsData Pmin property was properly set. ... ok
Test that the PDepKineticsData Tdata property was properly set. ... ok
Test that the PDepKineticsData Tmax property was properly set. ... ok
Test that the PDepKineticsData Tmin property was properly set. ... ok
Test that the PDepKineticsData comment property was properly set. ... ok
Test the PDepKineticsData.getRateCoefficient() method. ... ok
Test the PDepKineticsData.isPressureValid() method. ... ok
Test the PDepKineticsData.isTemperatureValid() method. ... ok
Test that the PDepKineticsData kdata property was properly set. ... ok
Test that a PDepKineticsData object can be pickled and unpickled with no ... ok
Test that a PDepKineticsData object can be reconstructed from its repr() ... ok
Test the conversion of first-order rate coefficient units to an integer ... ok
Test the conversion of second-order rate coefficient units to an integer ... ok
Test the conversion of third-order rate coefficient units to an integer ... ok
Test the conversion of zeroth-order rate coefficient units to an integer ... ok
Test the conversion of a reaction order of one to rate coefficient ... ok
Test the conversion of a reaction order of two to rate coefficient ... ok
Test the conversion of a reaction order of three to rate coefficient ... ok
Test the conversion of a reaction order of zero to rate coefficient ... ok
Test that the Eckart E0_TS property was properly set. ... ok
Test that the Eckart E0_prod property was properly set. ... ok
Test that the Eckart E0_reac property was properly set. ... ok
Test the Eckart.calculateTunnelingFactor() method. ... ok
Test that the Eckart frequency property was properly set. ... ok
Test that an Eckart object can be successfully pickled and ... ok
Test that an Eckart object can be successfully reconstructed ... ok
Test the Wigner.calculateTunnelingFactor() method. ... ok
Test that the Wigner frequency property was properly set. ... ok
Test that a Wigner object can be successfully pickled and unpickled ... ok
Test that a Wigner object can be successfully reconstructed from its ... ok
Test that we can make a prediction using MLEstimator. ... ____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_4 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_4 (MoleculeConv)    (None, 512)           85800       input_4[0][0]
____________________________________________________________________________________________________
dense_7 (Dense)                  (None, 50)            25650       moleculeconv_4[0][0]
____________________________________________________________________________________________________
dense_8 (Dense)                  (None, 1)             51          dense_7[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_5 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_5 (MoleculeConv)    (None, 512)           85800       input_5[0][0]
____________________________________________________________________________________________________
randommask_3 (RandomMask)        (None, 512)           0           moleculeconv_5[0][0]
____________________________________________________________________________________________________
dense_9 (Dense)                  (None, 50)            25650       randommask_3[0][0]
____________________________________________________________________________________________________
dense_10 (Dense)                 (None, 1)             51          dense_9[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_6 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_6 (MoleculeConv)    (None, 512)           85800       input_6[0][0]
____________________________________________________________________________________________________
randommask_4 (RandomMask)        (None, 512)           0           moleculeconv_6[0][0]
____________________________________________________________________________________________________
dense_11 (Dense)                 (None, 50)            25650       randommask_4[0][0]
____________________________________________________________________________________________________
dense_12 (Dense)                 (None, 7)             357         dense_11[0][0]
====================================================================================================
Total params: 111,807
Trainable params: 26,007
Non-trainable params: 85,800
____________________________________________________________________________________________________
ok
test_check_hund_rule_fail (rmgpy.molecule.adjlistTest.TestConsistencyChecker) ... ok
test_check_hund_rule_success (rmgpy.molecule.adjlistTest.TestConsistencyChecker) ... ok
adjlist: Check that RMG allows different electron spins in the same molecule with multiplicity = 2s + 1 ... ok
Test that the atom props attribute can be properly read and written. ... ok
adjlist: Test the Group.fromAdjacencyList() method. ... ok
testFromAdjacencyList_multiplicity (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
testFromAdjacencyList_multiplicity_list (rmgpy.molecule.adjlistTest.TestGroupAdjLists) ... ok
adjlist: Test the Group.fromAdjacencyList() method on an old style adjacency list. ... ok
adjlist: Test the Group.toAdjacencyList() method. ... ok
adjlist: Check the adjacency list read/write functions for a full molecule. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 1. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 2. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 3. ... ok
adjlist: Test the Molecule.fromAdjacencyList() method 4. ... ok
adjlist: Test if fromAdjacencyList works when saturateH is turned on ... ok
Test molecule can be created from the adjacency list for molecules with bond orders ... SKIP: WIP test failed: Invalid valency for atom H (H) with 1 unpaired electrons, 2 pairs of electrons, 0 charge, and bonds [0.5].
Test we can read an intermediate style adjacency list with implicit hydrogens 1 ... ok
Test we can read an old style adjacency list with implicit hydrogens 1 ... ok
Test we can read an old style adjacency list with implicit hydrogens 2 ... ok
Test we can read an old style adjacency list with implicit hydrogens 3 ... ok
Test we can read an old style adjacency list with implicit hydrogens 4 ... ok
Test we can read an old style adjacency list with implicit hydrogens 5 ... ERROR:root:Could not update atomtypes for this molecule:
1 C u0 p1 c-1 {2,T}
2 O u0 p3 c-3 {1,T}

SKIP: WIP test failed: Unable to determine atom type for atom O---, which has 0 single bonds, 0 double bonds to C, 0 double bonds to O, 0 double bonds to S, 1 triple bonds, 0 benzene bonds, 0 lone pairs, and 3 charge.
Test we can read an old style adjacency list with implicit hydrogens 1 ... ok
adjlist: Check the adjacency list read/write functions for a full molecule. ... ok
adjlist: Test that the adjlist reading and writing works with Helium. ... ok
adjlist: Test that improperly formed adjlists raise an InvalidAdjacencyListError. ... ok
adjlist: Test the Molecule.toAdjacencyList() method. ... ok
Test the adjacency list can be created for molecules with bond orders ... ok
adjlist: Check that we can convert back to old style adjacency list ... FAIL
adjlist: Test that molecules with old or intermediate adjacency list formats containing unusual ... ok
adjlist: Test that molecule adjlists containing wildcards raise an InvalidAdjacencyListError. ... ok
Test the AtomType.equivalent() method. ... ok
Test the AtomType.isSpecificCaseOf() method. ... ok
Test that we can reconstruct an AtomType object from its repr() ... ok
Test that an AtomType object can be successfully pickled and ... ok
Test the AtomType.setActions() method. ... ok
Test that getAtomType() returns appropriate carbon atom types. ... FAIL
Test that getAtomType() returns appropriate chlorine atom types. ... ok
Test that getAtomType() returns appropriate fluorine atom types. ... ok
Test that getAtomType() returns the hydrogen atom type. ... ok
Test that getAtomType() returns appropriate iodine atom types. ... ok
Test that getAtomType() returns appropriate nitrogen atom types. ... ok
Test that getAtomType() works for occupied surface sites and for regular atoms in the complex. ... ok
Test that getAtomType() returns appropriate types for other misc inerts. ... ok
Test that getAtomType() returns appropriate oxygen atom types. ... FAIL
Test that getAtomType() returns appropriate silicon atom types. ... FAIL
Test that getAtomType() returns appropriate sulfur atom types. ... FAIL
Test that getAtomType() works for vacant surface sites and for regular atoms in the complex. ... ok
Test conversion to and from OBMol ... ok
Test conversion to and from RDKitMol ... ok
Test the debugRDKitMol(rdmol) function doesn't crash ... ok
Test that toRDKitMol returns correct indices and atom mappings. ... ok
Test that toRDKitMol returns correct indices and atom mappings when hydrogens are removed. ... ok
Test that we don't lose any lone pairs on round trip RDKit conversion. ... ok
testDrawNonStandardBonds (rmgpy.molecule.drawTest.TestMoleculeDrawer) ... ERROR
Test we can create PDF files from molecules. ... ERROR
Test we can create PDF surface without a temporary file (newer versions of PyCairo?) ... ERROR
Test we can create PNG files from molecules. ... ERROR
Test we can draw a polycyclic molecule ... ERROR
Test that retrieving the chemkin name of an element works. ... ok
Test the rmgpy.elements.getElement() method. ... ok
Test that the rmgpy.elements.getElement() method works for isotopes. ... ok
Test that we can reconstruct an Element object from its repr() ... ok
Test that an Element object can be successfully pickled and ... ok
Test that aromatics are properly filtered. ... ok
Test that structures with higher octet deviation get filtered out ... ok
Test that structures with charge separation are only kept if they obey the electronegativity rule ... ok
Test that birads on `S u2 p0` are penalized ... ERROR
Test that an O4tc atomType with octet 8 gets penalized in the electronegativity heuristic ... ERROR
Test that an S#S substructure in a molecule gets penalized in the octet deviation score ... ok
Test that a charged molecule isn't filtered if it introduces new radical site ... ok
Test that _sortCyclicVertices works properly for a valid input. ... ok
Test that _sortCyclicVertices raises an error for an invalid input. ... ok
Test that _sortCyclicVertices raises an error for a noncyclic input. ... ok
Test that _sortCyclicVertices raises an error for an unconnected input. ... ok
Test the Graph.addEdge() method. ... ok
Test the Graph.addVertex() method. ... ok
Test the graph copy function to ensure a complete copy of the graph is ... ok
Test the returned dictionary points toward equivaalent vertices and edges ... ok
Test that getRelevantCycles return vertices in the proper order. ... ok
Test that getSmallestSetOfSmallestRings return vertices in the proper order. ... ok
Test the Graph.getAllCycles() method. ... ok
Test the Graph.getRingsOfSize() method ... ok
test_getAllCyclicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
Test the Graph.getAllEdges() method. ... ok
test_getAllPolycylicVertices (rmgpy.molecule.graphTest.TestGraph) ... ok
Test the Graph.getAllSimpleCyclesOfSize() method. ... ok
Test the Graph.getEdge() method. ... ok
Test the Graph.getEdges() method. ... ok
Test that the Graph.getPolycyclicRings() method returns only polycyclic rings. ... ok
Test that getMaxCycleOverlap returns the correct overlap numbers ... ok
Test that the Graph.getPolycyclicRings() method returns only polycyclic rings. ... ok
Test the Graph.getRelevantCycles() method. ... ok
Test the Graph.getSmallestSetOfSmallestRings() method. ... ok
Test the Graph.hasEdge() method. ... ok
Test the Graph.hasVertex() method. ... ok
Test the Graph.isCyclic() method. ... ok
Test the Graph.isEdgeInCycle() method. ... ok
Test the Graph.isVertexInCycle() method. ... ok
Check the graph isomorphism functions. ... ok
Check the graph isomorphism for broken graphs. ... ok
Test the graph merge function to ensure a proper merging of the graph ... ok
Test that a Graph object can be successfully pickled and unpickled ... ok
Test the Graph.removeEdge() method. ... ok
Test the Graph.removeVertex() method. ... ok
Test the Graph.resetConnectivityValues() method. ... ok
Test the Graph.sortVertices() method. ... ok
Test the graph split function to ensure a proper splitting of the graph ... ok
Check the subgraph isomorphism functions. ... ok
Test the Graph.updateConnectivityValues() method. ... ok
Tests the vertex connectivity values as introduced by Morgan (1965). ... ok
Test that the vertices attribute can be accessed. ... ok
test Group.addImplicitAtomsFromAtomType() method ... ok
Test the Group.addImplicitBenzene method ... ok
Tests the method classifyingBenzeneCarbons ... ok
Test the Group.clearLabeledAtoms() method. ... ok
Test the Group.containsLabeledAtom() method. ... ok
Test the Group.containsSurfaceSite() method. ... ok
Tests createAndConnectAtom method ... ok
Test that the draw method returns the expected pydot graph. ... ok
Test the Group.findIsomorphism() method. ... ok
Test the Group.findSubgraphIsomorphisms() method. ... ok
Test the Group.fromAdjacencyList() method. ... ok
test that appropriate group extensions are being generated ... ok
testGeneratedExtensionsSubgraphs (rmgpy.molecule.groupTest.TestGroup) ... ok
Test the Group.getLabeledAtom() method. ... ok
Test the Group.getLabeledAtoms() method. ... ok
Test the Group.isBenzeneExplicit method ... ok
Test the Group.isIsomorphic() method. ... ok
Test the Group.isSubgraphIsomorphic() method. ... ok
Test the Group.isSurfaceSite() method. ... ok
Test the Group.makeSampleMolecule method ... ok
Test the mergeGroups() function ... ok
Test the Group.pickWildCards function ... ok
Test that a Group object can be successfully pickled and ... ok
Tests sortByConnectivity method ... ok
Test the Group.toAdjacencyList() method. ... ok
Test that we can count elements properly. ... ok
Test that a png representation can be created. ... ERROR
Test the GroupAtom.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a FORM_BOND action. ... ok
Test the GroupAtom.applyAction() method for a GAIN_PAIR action when lonePairs is either specified or not. ... ok
Test the GroupAtom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupAtom.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupAtom.applyAction() method for a LOSE_PAIR action when lonePairs is either specified or not. ... ok
Test the GroupAtom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupAtom.copy() method. ... ok
Tests the countBonds function ... ok
Test the GroupAtom.equivalent() method. ... ok
Tests the GroupAtom.hasWildcards() method ... ok
Test the GroupAtom.isSpecificCaseOf() method. ... ok
Tests the GroupAtom.makeSampleAtom() method ... ok
Test that a GroupAtom object can be successfully pickled and ... ok
Test the GroupBond.applyAction() method for a BREAK_BOND action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a FORM_BOND action. ... ok
Test the GroupBond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the GroupBond.applyAction() method for a CHANGE_BOND action. ... ok
Test the GroupBond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the GroupBond.copy() method. ... ok
Test the GroupBond.equivalent() method. ... ok
test the Bond.getOrderNum() method ... ok
test the Bond.getOrderStr() method ... ok
test the Bond.isBenzene() method ... ok
test the Bond.isDouble() method ... ok
test the Bond.isSingle() method ... ok
Test the GroupBond.isSpecificCaseOf() method. ... ok
test the Bond.isTriple() method ... ok
Test that a GroupBond object can be successfully pickled and ... ok
test the Bond.setOrderNum() method ... ok
test the Bond.setOrderStr() method ... ok
testReduce (rmgpy.molecule.inchiTest.AugmentedInChITest) ... ok
test_compare (rmgpy.molecule.inchiTest.AugmentedInChITest) ... ok
test_constructor (rmgpy.molecule.inchiTest.AugmentedInChITest) ... ok
test_compose_aug_inchi (rmgpy.molecule.inchiTest.ComposeTest) ... ok
test_Methane (rmgpy.molecule.inchiTest.CreateAugmentedLayersTest) ... ok
Test that N atom in the p-layer has correct symbol. ... SKIP: WIP test failed: Non-neutral molecule encountered. Currently, RMG does not support ion chemistry.

1 O u0 p2 c0 {4,D}
2 O u0 p3 c-1 {4,S}
3 O u0 p3 c-1 {4,S}
4 N u0 p0 c+1 {1,D} {2,S} {3,S}

test_SingletMethylene (rmgpy.molecule.inchiTest.CreateAugmentedLayersTest) ... ok
test_TripletMethylene (rmgpy.molecule.inchiTest.CreateAugmentedLayersTest) ... ok
Test that 3-butene-1,2-diyl biradical is always resulting in the ... ok
test_inchi (rmgpy.molecule.inchiTest.DecomposeTest) ... ok
test_inchi_p_layer (rmgpy.molecule.inchiTest.DecomposeTest) ... ok
Test that the p-layer containing an element with zero lone ... ok
test_inchi_u_layer (rmgpy.molecule.inchiTest.DecomposeTest) ... ok
test_inchi_u_layer_p_layer (rmgpy.molecule.inchiTest.DecomposeTest) ... ok
test_NormalCarbon (rmgpy.molecule.inchiTest.ExpectedLonePairsTest) ... ok
test_NormalOxygen (rmgpy.molecule.inchiTest.ExpectedLonePairsTest) ... ok
test_Oxygen_3LP (rmgpy.molecule.inchiTest.ExpectedLonePairsTest) ... ok
test_SingletCarbon (rmgpy.molecule.inchiTest.ExpectedLonePairsTest) ... ok
test_ignore (rmgpy.molecule.inchiTest.IgnorePrefixTest) ... ok
test_compare (rmgpy.molecule.inchiTest.InChITest) ... ok
test_constructor (rmgpy.molecule.inchiTest.InChITest) ... ok
test_OCCC (rmgpy.molecule.inchiTest.ParseNLayerTest) ... ok
test_C7H17 (rmgpy.molecule.inchiTest.Parse_E_LayerTest) ... ok
test_C8H22 (rmgpy.molecule.inchiTest.Parse_E_LayerTest) ... ok
Test that the absence of an E-layer results in an empty list. ... ok
test_OCO (rmgpy.molecule.inchiTest.Parse_H_layerTest) ... ok
test_Methane (rmgpy.molecule.inchiTest.ResetLonePairsTest) ... ok
test_SingletMethylene (rmgpy.molecule.inchiTest.ResetLonePairsTest) ... ok
rmgpy.molecule.isomorphismTest.run_parameter_tests ... ok
distinct multiplicity for both molecules set by user. ... ok
identical multiplicity for both molecules set by user. ... ok
Multiplicity not set for one of two molecules ... ok
Both multiplicities not set. ... ok
rmgpy.molecule.isomorphismTest.test_isomorphism_R ... ok
Testing multiplicities in mol and group that don't match ... ok
Testing multiplicities in group vs. group ... ok
Test isormophism check of a CS group vs. a sulfur containing molecule ... ok
Checks that subgraph isomorphism works with enriched molecules and groups ... ok
Test that the AromaticBond class works properly for kekulization. ... ok
Test that the AromaticRing class works properly for kekulization. ... ok
Test the Atom.applyAction() method for a BREAK_BOND action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a FORM_BOND action. ... ok
Test the Atom.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Atom.applyAction() method for a CHANGE_BOND action. ... ok
Test the Atom.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Atom.copy() method. ... ok
Test the Atom.decrementRadical() method. ... ok
Test the Atom.equivalent() method. ... ok
Test Atom.getBondOrdersForAtom for all carbons in naphthalene ... ok
Test the Atom.incrementRadical() method. ... ok
Test the Atom.isCarbon() method. ... ok
Test the Atom.isChlorine() method. ... ok
Test the Atom.isFluorine() method. ... ok
Test the Atom.isHydrogen() method. ... ok
Test the Atom.isIodine() method. ... ok
Test the Atom.isNOS() method. ... ok
Test the Atom.isNitrogen() method. ... ok
Test the Atom.isNonHydrogen() method. ... ok
Test the Atom.isOxygen() method. ... ok
Test the Atom.isSilicon() method. ... ok
Test the Atom.isSpecificCaseOf() method. ... ok
Test the Atom.isSulfur() method. ... ok
Test the Atom.isSurfaceSite() method. ... ok
Test the Atom.equivalent() method for non-normal isotopes ... ok
Test the Atom.mass property. ... ok
Test the Atom.number property. ... ok
Test that a Atom object can be successfully pickled and ... ok
Test the Atom.symbol property. ... ok
Test the Bond.applyAction() method for a BREAK_BOND action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a FORM_BOND action. ... ok
Test the Bond.applyAction() method for a GAIN_RADICAL action. ... ok
Test the Bond.applyAction() method for a CHANGE_BOND action. ... ok
Test the Bond.applyAction() method for a LOSE_RADICAL action. ... ok
Test the Bond.copy() method. ... ok
Test the Bond.decrementOrder() method. ... ok
Test the GroupBond.equivalent() method. ... ok
test the Bond.getOrderNum() method ... ok
test the Bond.getOrderStr() method ... ok
Test the Bond.incrementOrder() method. ... ok
Test the Bond.isBenzene() method. ... ok
Test the Bond.isDouble() method. ... ok
Test the Bond.isOrder() method. ... ok
Test the Bond.isQuadruple() method. ... ok
Test the Bond.isSingle() method. ... ok
Test the Bond.isSingle() method with taking floating point addition ... ok
Test the Bond.isSpecificCaseOf() method. ... ok
Test the Bond.isTriple() method. ... ok
Test that a Bond object can be successfully pickled and ... ok
test the Bond.setOrderNum() method ... ok
test the Bond.setOrderStr() method ... ok
Test that updateLonePairs works as expected ... ok
Test that bond objects can return a bond string ... ok
Check the adjacency list read/write functions for a full molecule. ... ok
Test the Molecule.isAromatic() method for Benzene. ... ok
Test the Molecule.isAromatic() method for Cyclohexane. ... ok
Test the Molecule.isAromatic() method for Naphthalene. ... ok
Test aromaticity perception via getAromaticRings for azulene. ... ok
Test aromaticity perception via getAromaticRings for benzene. ... ok
Test aromaticity perception via getAromaticRings for biphenyl. ... ok
Test aromaticity perception via getAromaticRings for furan. ... ok
Test aromaticity perception via getAromaticRings for tetralin. ... ok
Test aryl radical perception for biradical species. ... ok
Test aryl radical perception for benzyl radical. ... ok
Test aryl radical perception for phenyl radical. ... ok
Test the Augmented InChI generation ... ok
Test the Augmented InChI Key generation ... ok
Test that singlet carbene molecules, bearing an electron pair rather than unpaired electrons ... ok
Test the Molecule.clearLabeledAtoms() method. ... ok
Test the Molecule.containsLabeledAtom() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method for dimethylacetylene. ... SKIP: WIP test failed: 2 != 1
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test the Molecule.countInternalRotors() method. ... ok
Test that the Molecule.fingerprint property works ... ok
Test the Molecule.fromAdjacencyList() method. ... ok
Test the Molecule.fromAdjacencyList() method works for atoms with unexpected isotopes. ... ok
Make sure that H radical is produced properly from its InChI ... ok
Make sure that H radical is produced properly from its SMILES ... ok
Test fused tricyclic can be decomposed into single rings more ... ok
Test if two possible smallest rings can join the smallest set ... ok
Test if two possible smallest rings can join the smallest set ... SKIP: WIP test failed: Lists differ: [['C', 'C', 'C', 'C', 'C'], ['... != [['C', 'C', 'C', 'C', 'C'], ['...

First differing element 1:
['C', 'C', 'C', 'C', 'O', 'Si']
['C', 'C', 'C', 'C', 'C', 'S']

  [['C', 'C', 'C', 'C', 'C'],
-  ['C', 'C', 'C', 'C', 'O', 'Si'],
?                        ^     -

+  ['C', 'C', 'C', 'C', 'C', 'S'],
?                        ^

   ['C', 'C', 'C', 'O', 'S', 'Si']]
Test that monocyclic rings within a molecule are returned properly in the function ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getLabeledAtom() method. ... ok
Test the Molecule.getLabeledAtoms() method. ... ok
Test the Molecule.getMolecularWeight() method. ... ok
Test that monocyclic rings within a molecule are returned properly in the function ... ok
Test that polycyclic rings within a molecule are returned properly in the function ... ok
Test that SSSR within a molecule are returned properly in the function ... ok
Test that the symmetry number getter works properly ... ok
Test that the isIdentical returns False with butane ... FAIL
Test that the isIdentical method returns False with ethene ... FAIL
Test that the isIdentical returns True with butane ... ok
Test that InChI Key generation is working properly. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Test the Molecule.isInCycle() method with ethane. ... ok
Check the graph isomorphism functions. ... ok
Test that we can round-trip SMILES strings of Kekulized aromatics ... FAIL
Test that we can print SMILES strings of Kekulized structures ... ok
Test molecules between C1 to C201 in 10 carbon intervals to make ... ok
testLargeMolUpdate (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test the Molecule.isLinear() method. ... ok
Test that augmented inchi without InChI layer raises Exception. ... ok
Test that augmented inchi with wrong layer is caught. ... [14:58:47] ERROR:
ok
Test that augmented inchi with wrong layer is caught. ... ok
Test that augmented inchi with wrong layer is caught. ... ok
Test a key-value pair is added to the props attribute of Molecule. ... ok
Test that Molecule's props dictionaries are independent of each other. ... ok
Test that a Molecule object can be successfully pickled and ... ok
Test that the species [CH] has one radical electrons and a spin multiplicity of 2. ... ok
Test that the species [CH2] has two radical electrons and a spin multiplicity of 3. ... ok
Test radical count on [CH2]C[CH2] ... ok
Test the Molecule.getRadicalCount() method. ... ok
Test that identifying ring membership of atoms works properly. ... ok
Test that we can generate a few SMILES strings as expected ... ERROR
Test the Molecule.getSmallestSetOfSmallestRings() method with a complex ... ok
Test that the Molecule.saturate() method works properly for an indenyl radical ... ok
Test the saturateUnfilledValence for an aromatic and nonaromatic case ... ok
Test radical and carbene count on singlet carbene. ... ok
Test that getSingletCarbeneCount returns 1 for singlet carbon atom. ... ok
Check the graph isomorphism functions. ... ok
testSubgraphIsomorphismAgain (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
testSubgraphIsomorphismManyLabels (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
testSubgraphIsomorphismRings (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
Test that we can identify surface molecules. ... ok
Test the Molecule.toAdjacencyList() method. ... ok
Test the Molecule.toAdjacencyList() method works for atoms with unexpected isotopes. ... FAIL
Test if we can convert a Molecule object into a Group object. ... ok
Test radical and carbene count on triplet carbene. ... ok
testUpdateLonePairs (rmgpy.molecule.moleculeTest.TestMolecule) ... ok
Test that generating a count of bond labels works properly. ... ok
Test that the correct set of Hydrogen Bonded structures are generated ... ok
Test that we can count elements properly. ... ok
test that remove HBonds removes all hydrogen bonds from a given molecule ... ok
see if the assignAtomID method properly labels molecule ... ok
see if the atomIDVvalid method properly returns True ... ok
see if the atomIDVvalid method properly returns False ... ok
test_2_atoms (rmgpy.molecule.pathfinderTest.DistanceComputingTest) ... ok
test_3_atoms (rmgpy.molecule.pathfinderTest.DistanceComputingTest) ... FAIL
test_SHO3 (rmgpy.molecule.pathfinderTest.FindAdjLonePairMultipleBondDelocalizationPaths) ... ok
test_HOSO (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths) ... FAIL
test_NO2a (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths) ... ok
test_NO2b (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths) ... FAIL
test_double_bond (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths) ... ok
test_HSO3 (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalMultipleBondDelocalizationPaths) ... ok
test_NS (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalMultipleBondDelocalizationPaths) ... FAIL
test_allyl_radical (rmgpy.molecule.pathfinderTest.FindAllylDelocalizationPathsTest) ... FAIL
test_nitrogenated_birad (rmgpy.molecule.pathfinderTest.FindAllylDelocalizationPathsTest) ... FAIL
test_C2H2O3 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ok
test_C3H2 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ERROR
test_C3H2O3 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ok
test_C3H4 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ERROR
test_C3H4O4 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ERROR
test_C5H6O (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest) ... ERROR
test_C2H2O3 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... ok
test_C3H2O3 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... ok
test_C4H6O (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... ok
test_C5H6O_2 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... ok
test_C6H6O4 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... [14:58:48] WARNING:  Problems/mismatches: Mobile-H( Hydrogens: Locations or number, Number; Charge(s): Do not match)
ERROR
test_C6H6O6 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... [14:58:48] WARNING:  Problems/mismatches: Mobile-H( Hydrogens: Locations or number; Mobile-H groups: Falsely present, Attachment points)
ERROR
test_CO (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest) ... ok
test_135hexatriene (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... ok
test_13butadiene (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... FAIL
test_13cyclohexadiene (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... ok
test_14cyclohexadiene (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... ok
test_Benzene (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... ok
test_C4H4 (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... FAIL
test_acrolein (rmgpy.molecule.pathfinderTest.FindButadieneTest) ... ok
test_H2NNOO (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... ok
test_HN3 (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... ok
test_N2Oa (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... ok
test_N2Ob (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... FAIL
test_NH2CHO (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... FAIL
test_SN2 (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... ok
test_azide (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest) ... ok
test_HNNOO (rmgpy.molecule.pathfinderTest.FindN5dcRadicalDelocalizationPaths) ... FAIL
test_CCC (rmgpy.molecule.pathfinderTest.ShortestPathTest) ... FAIL
test_Cyclohexane (rmgpy.molecule.pathfinderTest.ShortestPathTest) ... ok
test_bicyclo420octane (rmgpy.molecule.pathfinderTest.ShortestPathTest) ... ok
Test to ensure pi electrons are conserved during optimization ... ok
Test that clarTransformation generates an aromatic ring. ... ok
Test that we generate 5 Clar structures for corannulene ... ok
Test that Clar structure generation doesn't modify exocyclic double bonds ... ok
Test that we generate 2 Clar structures for phenalene. ... ok
Test that we generate 1 Clar structure for phenanthrene. ... ok
Test resonance structure generation for surface adsorbed O=X ... ok
Test allyl shift for hexadienyl radical ... ok
Test that generate_optimal_aromatic_resonance_structures gives consistent output ... ok
Test resonance structure generation for aromatic species with lone pair <=> radical resonance ... ERROR
Test resonance structure generation for aromatic species with N5ddc <=> N5tc resonance ... SKIP: WIP test failed: Unable to generate identifier type smi with backend openbabel.
Test resonance structure generation for ethyl azide ... ok
Test that we can handle bridged aromatics. ... ok
Test resonance structure generation for p-methylbenzylbenzene radical ... ok
Test resonance structure generation for 5,6-dimethylene-1,3-cyclohexadiene radical ... ok
Test resonance structure generation for 5,6-dimethylene-1,3-cyclohexadiene radical ... ok
Test resonance structure generation for 5,6-dimethylene-1,3-cyclohexadiene ... ok
Test resonance structure generation for C=C[CH][O] bi-radical ... ok
Test allyl shift for a carbene species ... ok
Test that we obtain the correct aromatic structure for a monocyclic aromatic that RDKit mis-identifies. ... ok
Test that we generate proper structures for a polycyclic aromatic that RDKit mis-identifies. ... ok
Test that we obtain the correct aromatic structure for a polycylic aromatic that RDKit mis-identifies. ... ok
Test we can make aromatic perylene from both adjlist and SMILES ... ok
Test we can make aromatic naphthalene from both adjlist and SMILES ... ok
Test resonance structure generation for [CH]=O and [CH]=S ... ok
Test that keep_isomorphic works for resonance structure generation when False. ... ok
Test that keep_isomorphic works for resonance structure generation when True. ... ok
Test that we can kekulize benzene. ... ok
Test that we can kekulize a bridged polycyclic aromatic species. ... ok
Test that we can kekulize corannulene. ... ok
Test that we can kekulize coronene. ... ok
Test that we can kekulize naphthalene. ... ok
Test that we can kekulize phenanthrene. ... ok
Test that we can kekulize pyrene. ... ok
Test resonance structure generation for methyl naphthalene ... ok
Test resonance structure generation for methyl phenanthrene ... ok
Test resonance structure generation for methyl phenanthrene radical ... ok
Test we can make all resonance structures of o-cresol radical ... ok
Test resonance structure generation for N#[N+][O-] ... ok
Test the N5dc resonance transformation ... ok
Test the N5dc radical resonance transformation ... ok
Test resonance structure generation for NCO ... ok
Test that an incorrect NO structure [::N][::O.] is correctly identified as [:N.]=[::O] ... ok
Test resonance structure generation for [O]N=O radical ... ok
Test resonance structure generation for naphthyl radical ... ok
Test that we can turn off Clar structure generation. ... ok
Test resonance structure generation for CC=N[O] radical ... ok
Test that we can make aromatic resonance structures when there is a pseudo-aromatic ring. ... ok
Test that we can make aromatic resonance structures when there is a pseudo-aromatic ring. ... ok
Test allyl shift for a cyclic species with heteroatoms ... ok
Test resonance structure generation for styryl, with radical on branch ... ok
Test resonance structure generation for styryl, with radical on ring ... ok
Test allyl shift for a tri-rad carbon ... ok
Test benzene, aromatic SMILES ... ok
Test benzene, kekulized SMILES ... ok
Test cyclobutylbenzene radical, aromatic SMILES ... ok
Test cyclopropylmethyl benzene, aromatic SMILES ... ok
Test cyclopropylbenzene, aromatic SMILES ... ok
Test cyclopropyl benzene, generate aromatic resonance isomers ... ok
Test propylbenzene radical, aromatic SMILES ... ok
Test cyclopropyl benzene radical, aromatic SMILES ... ok
Test cyclopropyl benzene radical, kekulized SMILES ... ok
Test aryne resonance for benzyne ... ok
Test aryne resonance in naphthyne ... ok
Test aryne resonance in phenanthryne ... ok
Test resonance structure generation for O3, S3 and SO2. ... ok
Test the Molecule.calculateAtomSymmetryNumber() on [CH2]C=C ... ok
Test the Molecule.calculateAtomSymmetryNumber() on CC ... ok
Test the Molecule.calculateAtomSymmetryNumber() on CC(D)(T) ... ok
Test the Molecule.calculateAtomSymmetryNumber() on CC(C)C ... ok
Test the Molecule.calculateAtomSymmetryNumber() on CH4 ... ok
Test the Molecule.calculateAtomSymmetryNumber() on [CH3] ... ok
Test the Molecule.calculateAtomSymmetryNumber() on CCC ... ok
Test the Molecule.calculateAtomSymmetryNumber() on [CH2]CC([CH2])C(C)C=C ... ok
Test the Molecule.calculateAxisSymmetryNumber() on CC(C)=C=C(CC)CC ... ok
Test the Molecule.calculateAxisSymmetryNumber() on CC=C=[C] ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=CCCC ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C(C(C(C(C=C=C)=C=C)=C=C)=C=C) ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=[C]C(C)(C)[C]=C=C ... SKIP: WIP test failed: 1.0 != 4
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C=O ... ok
Test the Molecule.calculateAxisSymmetryNumber() on CC=C=C=O ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C=N ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C=[N] ... ok
Test the Molecule.calculateAxisSymmetryNumber() on [CH2]C=C ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C=C ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C=[CH] ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=C ... ok
Test the Molecule.calculateAxisSymmetryNumber() on C=C=[C] ... ok
Test the Molecule.calculateAxisSymmetryNumber() on O=O ... ok
Test the Molecule.calculateBondSymmetryNumber() on C#C ... ok
Test the Molecule.calculateBondSymmetryNumber() on [CH2]C=C ... ok
Test the Molecule.calculateBondSymmetryNumber() on CCCC ... ok
Test the Molecule.calculateBondSymmetryNumber() on CC ... ok
Test the Molecule.calculateBondSymmetryNumber() on C=C ... ok
Test the Molecule.calculateBondSymmetryNumber() on CCC ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on C1CCC(=O)C(=O)C1=O ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on C1CCCCC1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on C1CCCCC1=O ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on CC1CC(C)C1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on CC1CCC1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on C=C1CCC1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on CC1CC1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on C=C1CC1 ... ok
Test the Molecule.calculateCyclicSymmetryNumber() on [CH]1CCC1CC1CC1 ... ok
Test the Molecule.calculateAtomSymmetryNumber() for the edge carbons ... ok
Test the Molecule.calculateAtomSymmetryNumber() for the edge carbons ... ok
Test the Molecule.calculateAtomSymmetryNumber() for the middle carbon ... ok
Tests that the species symmetry number can be different from the molecule symmetry number ... ok
Test the Molecule.calculateSymmetryNumber() on C#C ... ok
Test the Molecule.calculateSymmetryNumber() on C#CC#C ... ok
Test the Molecule.calculateSymmetryNumber() on C1=C=C=1 ... ok
Test the Molecule.calculateSymmetryNumber() on [C]#[C] ... ok
Test the Molecule.calculateSymmetryNumber() on C=[CH]. ... ok
Test the Molecule.calculateSymmetryNumber() on C=C ... ok
Test the Molecule.calculateSymmetryNumber() on C=O ... ok
Test the Molecule.calculateSymmetryNumber() on [H][H] ... ok
Test the Molecule.calculateSymmetryNumber() on [OH] ... ok
Test the Molecule.calculateSymmetryNumber() on CH4 ... ok
Test the Molecule.calculateSymmetryNumber() on [CH3] ... ok
Test the Molecule.calculateSymmetryNumber() on O=O ... ok
Test the Molecule.calculateSymmetryNumber() on H2O ... ok
Test the Molecule.calculateSymmetryNumber() on C=C=[C]C(C)(C)[C]=C=C ... ok
Test the Species.getSymmetryNumber() (total symmetry) on Cc1ccccc1C ... ok
Test the Species.getSymmetryNumber() (total symmetry) on Cc1ccc(C)cc1 ... ok
Test the Molecule.calculateSymmetryNumber() on C(=CC(c1ccccc1)C([CH]CCCCCC)C=Cc1ccccc1)[CH]CCCCCC ... SKIP: WIP test failed: 9.0 != '36?'
Test the Species.getSymmetryNumber() (total symmetry) on Allyl, [CH2]C=C ... ok
Test the Species.getSymmetryNumber() (total symmetry) on c1ccccc1 ... ok
Test the Species.getSymmetryNumber() (total symmetry) on c1ccccc1Cl ... ok
Test the Molecule.calculateSymmetryNumber() on CC ... ok
Test the Species.getSymmetryNumer() for C[CH]C=CC ... ok
Test symmetry on c1ccccc1[O] using phenoxy benzene structure ... ok
Test the Species.getSymmetryNumber() (total symmetry) on c1ccccc1[O] ... ok
Test the Species.getSymmetryNumber() (total symmetry) from issue # 332 ... ok
Test the Species.getSymmetryNumber() (total symmetry) on c1ccccc1C ... ok
Test the Species.getSymmetryNumber() (total symmetry) on [CH2][CH]C=C ... ok
Test that the _indistinguishable function works properly ... ok
Test that the _indistinguishable function works properly ... FAIL
Test the Molecule.calculateSymmetryNumber() on [CH]1CCC1CC1CC1 ... ok
Test the Molecule.calculateSymmetryNumber() on CC1CC(C)C1 ... ok
C=CC.C. ... ok
test_C11H16 (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Test that the unpaired electron of 1,3-cyclopentadienyl radical always ... ok
test_C5H6O (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
n-C5 chain with 1 lone pair at the central carbon atom ... ok
test_C6H10_tetrarad (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Test that the 2 unpaired electrons of .CC(=C)C(C.)=C ... ok
test_C7H10 (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Looks a lot like toluene but with 1 double bond replaced by a biradical. ... ok
test_C7H9 (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Looks a lot like cycloctene but with 1 double bond replaced by a biradical. ... ok
test_CH2O2 (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
test_H (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Test that different resonance structures give identical InChIs. ... ok
test_benzyne (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
Test that we can generate an InChI for a disconnected molecule. ... ok
Test that we can generate an InChI for an isotopic molecule. ... ok
Test that we can generate an InChI for an isotopic molecule. ... ok
test_singlet_vs_triplet (rmgpy.molecule.translatorTest.InChIGenerationTest) ... ok
testC2H2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
testC2H3O3 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
testC3H4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC4H6O (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC4H6O_2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC5H6O (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC5H6O_2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC5H6O_3 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testC6H6 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testCO (rmgpy.molecule.translatorTest.InChIParsingTest) ... [14:58:52] Explicit valence for atom # 1 C greater than permitted
SKIP: WIP test failed: list index out of range
testO2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
testQuadri2DoubleBondMult5 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testQuadriRadicalDoubleBondZwitterMult5 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testSingletMethylene (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
testTriRadical2DoubleBondMult4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testTriRadicalDoubleBondMult4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testTriRadicalZwitterMult4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
testTripletMethylene (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_C2H2O3 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR:root:Could not update atomtypes for this molecule:
multiplicity 3
1 O u1 p1 c0 {4,D} {5,S}
2 O u0 p2 c0 {5,D}
3 O u1 p2 c0 {5,S}
4 C u0 p0 c0 {1,D} {6,S} {7,S}
5 C u0 p0 c0 {1,S} {2,D} {3,S}
6 H u0 p0 c0 {4,S}
7 H u0 p0 c0 {4,S}

ERROR
test_C2H3_triradical_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C2H4_biradical_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_C3H2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C3H2O3 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C3H3O3 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR:root:Could not update atomtypes for this molecule:
multiplicity 4
1 O u1 p1 c0 {4,S} {5,D}
2 O u0 p2 c0 {3,S} {5,S}
3 O u1 p2 c0 {2,S}
4 C u0 p0 c0 {1,S} {6,D} {7,S}
5 C u0 p0 c0 {1,D} {2,S} {8,S}
6 C u1 p0 c0 {4,D} {9,S}
7 H u0 p0 c0 {4,S}
8 H u0 p0 c0 {5,S}
9 H u0 p0 c0 {6,S}

ERROR
test_C3H4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C3H4O4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C3H6_biradical_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C6H10 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C6H6O4 (rmgpy.molecule.translatorTest.InChIParsingTest) ... [14:58:52] WARNING:  Problems/mismatches: Mobile-H( Hydrogens: Locations or number, Number; Charge(s): Do not match)
ERROR
test_C6H6O6 (rmgpy.molecule.translatorTest.InChIParsingTest) ... [14:58:52] WARNING:  Problems/mismatches: Mobile-H( Hydrogens: Locations or number; Mobile-H groups: Falsely present, Attachment points)
ERROR
test_C6H8 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_C6H8O2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_CCCO_triplet (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_CH2O2 (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR
test_CH3_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_CO_triplet (rmgpy.molecule.translatorTest.InChIParsingTest) ... ERROR:root:Could not update atomtypes for this molecule:
multiplicity 3
1 O u2 p1 c0 {2,D}
2 C u0 p1 c0 {1,D}

ERROR
test_Ethane_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_Ethyl_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_H2S (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_H2_parsing (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_NO (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_ammonia (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
has same inchi as ammonia but gets a proton layer: /p+1 ... SKIP: WIP test failed: Unable to correctly parse InChI=1/H3N/h1H3/p+1 with backend try-all.
Test that we can parse an InChI for an isotopic molecule. ... ok
Test that we can parse an InChI for an isotopic molecule. ... ok
- Mobile H spread over oxygen 2, 3, 4 ... SKIP: WIP test failed: Unable to determine atom type for atom O, which has 0 single bonds, 1 double bonds to C, 0 double bonds to O, 0 double bonds to S, 0 triple bonds, 0 benzene bonds, 0 lone pairs, and 1 charge.
test_pyridine (rmgpy.molecule.translatorTest.InChIParsingTest) ... ok
test_pyrimidine (rmgpy.molecule.translatorTest.InChIParsingTest) ... [14:58:52] WARNING: Charges neutralized
[14:58:52] WARNING: Charges neutralized
ok
test_fromAugmentedInChI (rmgpy.molecule.translatorTest.ParsingTest) ... ok
test_fromInChI (rmgpy.molecule.translatorTest.ParsingTest) ... FAIL
test_fromSMARTS (rmgpy.molecule.translatorTest.ParsingTest) ... ok
test_fromSMILES (rmgpy.molecule.translatorTest.ParsingTest) ... FAIL
Test that the appropriate error is raised for identifier/type mismatch. ... ok
Test that the correct error is raised when reading an InChIKey ... ok
Test the SMILES generation for atomic carbon mult=(1,3,5) ... ok
Test the SMILES generation for methane ... ok
Test that different aromatics representations returns different SMILES. ... ok
Test the SMILES generation for various molecules and radicals ... ok
Test that we can safely return a blank identifier for an empty molecule. ... ok
test_normal (rmgpy.molecule.utilTest.AgglomerateTest) ... ok
test_2_elements (rmgpy.molecule.utilTest.ComboGeneratorTest) ... ok
Test element counting for InChI ... ok
Test element counting for InChI with disconnected molecule ... ok
test_2_elements_in_1_layer (rmgpy.molecule.utilTest.PartitionTest) ... ok
test_2_elements_in_2_layers (rmgpy.molecule.utilTest.PartitionTest) ... ok
test_3_elements_in_2_layers (rmgpy.molecule.utilTest.PartitionTest) ... ok
test_3_elements_in_2_layers_1_singleton (rmgpy.molecule.utilTest.PartitionTest) ... ok
Test that a index not part of the parameter list, results in a key-value pair with ... ok
test_2_elements_sets (rmgpy.molecule.utilTest.SwapTest) ... ok
Test that vertex mapping is cleared after isomorphism. ... ok
Test that feasibility returns correct values on highly functional molecule ... ok
Test that we can add graphs to the object and that they are sorted ... FAIL
Test the SingleExponentialDown.T0 attribute. ... ok
Test the SingleExponentialDown.sigma attribute. ... ok
Test the SingleExponentialDown.getAlpha() method. ... ok
Test the SingleExponentialDown.n attribute. ... ok
Test that a SingleExponentialDown object can be successfully pickled ... ok
Test that a SingleExponentialDown object can be successfully ... ok
Test that the `repr` representation contains desired properties. ... ok
Test that the string representation contains desired properties. ... ok
Test that the network `bathGas` property was properly set. ... ok
test_collisionMatrixMemoryHandling (rmgpy.pdep.networkTest.TestNetwork) ... WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 5000 grains instead of 10000
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 2500 grains instead of 5000
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 1250 grains instead of 2500
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 625 grains instead of 1250
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 312 grains instead of 625
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 156 grains instead of 312
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 78 grains instead of 156
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 39 grains instead of 78
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 19 grains instead of 39
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 9 grains instead of 19
WARNING:root:Collision matrix too large to manage
WARNING:root:Adjusting to use 4 grains instead of 9
ok
Test that the network `isomers` property was properly set. ... ok
Test that the network `label` property was properly set. ... ok
Test that the network `netReactions` property was properly set. ... ok
Test that the network `pathReactions` property was properly set. ... ok
Test that the network `products` property was properly set. ... ok
Test that the network `reactants` property was properly set. ... ok
Test that the `repr` representation contains desired properties. ... ok
Test that the string representation contains desired properties. ... ok
Test that generateThermoData() works correctly on gaussian PM3. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from the previous gaussian PM3 run. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() works correctly for gaussian PM6. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that generateThermoData() can load thermo from the previous gaussian PM6 run. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that getThermoData() fails when expected. ... ok
Test that Gaussian getThermoData() works correctly. ... SKIP: Gaussian not found. Try resetting your environment variables if you want to use it.
Test that Mocpac getThermoData() works correctly. ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that initialize() works correctly. ... ok
Test that setDefaultOutputDirectory() works correctly. ... ok
Test that checkAllSet() works correctly. ... ok
Test that generateThermoData() works correctly for MOPAC PM3 ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that generateThermoData() can load thermo from the previous MOPAC PM3 run. ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that generateThermoData() works correctly for MOPAC PM6 ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that generateThermoData() can load thermo from the previous MOPAC PM6 run. ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that generateThermoData() works correctly for MOPAC PM7 ... SKIP: MOPAC license not installed. Run mopac for instructions
Test that generateThermoData() can load thermo from the previous MOPAC PM7 run. ... SKIP: MOPAC license not installed. Run mopac for instructions
Test the creation of an acceleration quantity with units of cm/s^2. ... ok
Test the creation of an acceleration quantity with units of m/s^2. ... ok
Test the creation of an area quantity with units of m^2. ... ok
Test the creation of an area quantity with units of m^2. ... ok
Test the creation of an concentration quantity with units of molecules/m^3. ... ok
Test the creation of an concentration quantity with units of mol/m^3. ... ok
Test the creation of an concentration quantity with units of m^-3. ... ok
Test the creation of a dipole moment quantity with units of C*m. ... ok
Test the creation of a dipole moment quantity with units of J/mol. ... ok
Test the creation of an energy quantity with units of J. ... ok
Test the creation of an energy quantity with units of J/mol. ... ok
Test the creation of an energy quantity with units of K (not really an energy!). ... ok
Test the creation of an energy quantity with units of cal. ... ok
Test the creation of an energy quantity with units of cal/mol. ... ok
Test the creation of an energy quantity with units of kJ. ... ok
Test the creation of an energy quantity with units of kJ/mol. ... ok
Test the creation of an energy quantity with units of kcal. ... ok
Test the creation of an energy quantity with units of kcal/mol. ... ok
Test the creation of a flux quantity with units of molecules/(m^2*s). ... ok
Test the creation of a flux quantity with units of mol/(m^2*s). ... ok
Test the creation of a flux quantity with units of m^-2*s^-1. ... ok
Test the creation of an force quantity with units of N. ... ok
Test the creation of a frequency quantity with units of GHz. ... ok
Test the creation of a frequency quantity with units of Hz. ... ok
Test the creation of a frequency quantity with units of K. ... ok
Test the creation of a frequency quantity with units of MHz. ... ok
Test the creation of a frequency quantity with units of cm^-1. ... ok
Test the creation of a frequency quantity with units of eV. ... ok
Test the creation of a frequency quantity with units of kHz. ... ok
Test the creation of a frequency quantity with units of s^-1. ... ok
Test the creation of a heat capacity quantity with units of J/K. ... ok
Test the creation of a heat capacity quantity with units of J/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of cal/K. ... ok
Test the creation of a heat capacity quantity with units of cal/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of kJ/K. ... ok
Test the creation of a heat capacity quantity with units of kJ/(mol*K). ... ok
Test the creation of a heat capacity quantity with units of kcal/K. ... ok
Test the creation of a heat capacity quantity with units of kcal/(mol*K). ... ok
Test the creation of a moment of inertia quantity with units of amu*angstrom^2. ... ok
Test the creation of a moment of inertia quantity with units of kg*m^2. ... ok
Test the creation of a length quantity with units of cm. ... ok
Test the creation of a length quantity with units of km. ... ok
Test the creation of a length quantity with units of m. ... ok
Test the creation of a length quantity with units of mm. ... ok
Test the creation of a length quantity with units of nm. ... ok
Test the creation of a length quantity with units of pm. ... ok
Test the creation of a length quantity with units of um. ... ok
Test the creation of a mass quantity with units of amu. ... ok
Test the creation of a mass quantity with units of g/mol. ... ok
Test the creation of a mass quantity with units of kg. ... ok
Test the creation of a mass quantity with units of kg/mol. ... ok
Test the creation of a momentum quantity with units of kg*m/s^2. ... ok
Test the creation of a power quantity with units of W. ... ok
Test the creation of a pressure quantity with units of Pa. ... ok
Test the creation of a pressure quantity with units of atm. ... ok
Test the creation of a pressure quantity with units of bar. ... ok
Test the creation of a pressure quantity with units of psi. ... ok
Test the creation of a pressure quantity with units of torr. ... ok
ArrayQuantity: test that the value and uncertainty get converted to the proper si value. ... ok
Test that the ArrayQuantity objects can be recreated using their __repr__ function ... ok
ScalarQuantity: test that the value and uncertainty get converted to the proper si value. ... ok
Test that the ScalarQuantity objects can be recreated using their __repr__ function ... ok
Test the creation of a rate coefficient quantity with units of cm^3/(molecule*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^3/(mol*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^6/(mol^2*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^6/(molecule^2*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^9/(mol^3*s). ... ok
Test the creation of a rate coefficient quantity with units of cm^9/(molecule^3*s). ... cm^9/(molecule^3*s)
ok
Test the creation of a rate coefficient quantity with units of m^3/(mol*s). ... ok
Test the creation of a rate coefficient quantity with units of m^6/(mol^2*s). ... ok
Test the creation of a rate coefficient quantity with units of m^9/(mol^3*s). ... ok
Test the creation of a rate coefficient quantity with units of s^-1. ... ok
Test the creation of a temperature quantity with units of K. ... ok
Test the creation of a temperature quantity with units of degrees C. ... ok
Test the creation of a temperature quantity with units of degrees F. ... ok
Test the creation of a temperature quantity with units of degrees R. ... ok
Test the creation of a time quantity with units of fs. ... ok
Test the creation of a time quantity with units of hr. ... ok
Test the creation of a time quantity with units of min. ... ok
Test the creation of a time quantity with units of ms. ... ok
Test the creation of a time quantity with units of ns. ... ok
Test the creation of a time quantity with units of ps. ... ok
Test the creation of a time quantity with units of s. ... ok
Test the creation of a time quantity with units of us. ... ok
Test the creation of an velocity quantity with units of m/s. ... ok
Test the creation of an velocity quantity with units of m/s. ... ok
Test the creation of an volume quantity with units of L. ... ok
Test the creation of an volume quantity with units of m^3. ... ok
This method tests that a change in degeneracy will result in a modified rate constant ... ok
This method tests that a change in degeneracy will result in a modified rate constant ... ok
Test the Reaction.getEnthalpyOfReaction() method. ... ok
Test the Reaction.getEntropyOfReaction() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test the Reaction.getEquilibriumConstant() method. ... ok
Test that fixBarrierHeight: ... ok
Test the Reaction.getFreeEnergyOfReaction() method. ... ok
Test the Reaction.generateReverseRateCoefficient() method. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the Arrhenius format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the ArrheniusEP format. ... SKIP: WIP test failed: Unexpected kinetics type <type 'rmgpy.kinetics.arrhenius.ArrheniusEP'>; should be one of ('KineticsData', 'Arrhenius', 'MultiArrhenius', 'PDepArrhenius', 'MultiPDepArrhenius', 'Chebyshev', 'ThirdBody', 'Lindemann', 'Troe')
Test the Reaction.generateReverseRateCoefficient() method works for the Lindemann format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the MultiArrhenius format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the MultiPDepArrhenius format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the PDepArrhenius format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the ThirdBody format. ... ok
Test the Reaction.generateReverseRateCoefficient() method works for the Troe format. ... ok
Test the Reaction.hasTemplate() method. ... ok
Test the Reaction.isAssociation() method. ... ok
Test the Reaction.isDissociation() method. ... ok
Test the Reaction.isIsomerization() method. ... ok
Test that a Reaction object can be successfully reconstructed ... ok
Test that a Reaction object can be successfully pickled and ... ok
Test the Reaction.getRateCoefficient() method. ... ok
Test the Reaction.getStoichiometricCoefficient() method. ... ok
This method tests that reaction pairs are being generated for sulfur species ... ok
A test of the transition state theory k(T) calculation function, ... ok
test1to1 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test1to2 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test2to2 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test2to3 (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
test2to3_usingCheckOnlyLabel (rmgpy.reactionTest.TestReactionIsomorphism) ... ok
Tests formation of cantera reactions with Arrhenius or kinetics. ... ok
Tests formation of cantera reactions with Chebyshev kinetics. ... ok
Tests formation of cantera reactions with Falloff kinetics. ... ok
Tests formation of cantera reactions with MultiArrhenius kinetics. ... ok
Tests formation of cantera reactions with MultiPDepArrhenius kinetics. ... ok
Tests formation of cantera reactions with PDepArrhenius kinetics. ... ok
Test isSurfaceReaction for reaction based on Molecules ... ok
Test isSurfaceReaction for reaction based on Species ... ok
Test the CH3 adsorption rate given by StickingCoefficient ... ok
Test the CH3 adsorption rate given by SurfaceArrhenius ... ok
testConstructor (rmgpy.reduction.modelTest.ReductionReactionTest) ... ok
testReduce (rmgpy.reduction.modelTest.ReductionReactionTest) ... ok
testAllEntriesAccessibleInSearchTargetIndex (rmgpy.reduction.reductionTest.ReduceUnitTest) ... SKIP: WIP test failed: searchTargetIndex will not return the second occurance of species with the same label.
Test that we can import Reaction Libraries using the Tuple False form. ... ok
Test that we can import Reaction Libraries using the non-tuple form. ... ok
Test that we can import Reaction Libraries using the Tuple True form. ... ok
Test that we can input. ... ____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_7 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_7 (MoleculeConv)    (None, 512)           85800       input_7[0][0]
____________________________________________________________________________________________________
dense_13 (Dense)                 (None, 50)            25650       moleculeconv_7[0][0]
____________________________________________________________________________________________________
dense_14 (Dense)                 (None, 1)             51          dense_13[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_8 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_8 (MoleculeConv)    (None, 512)           85800       input_8[0][0]
____________________________________________________________________________________________________
randommask_5 (RandomMask)        (None, 512)           0           moleculeconv_8[0][0]
____________________________________________________________________________________________________
dense_15 (Dense)                 (None, 50)            25650       randommask_5[0][0]
____________________________________________________________________________________________________
dense_16 (Dense)                 (None, 1)             51          dense_15[0][0]
====================================================================================================
Total params: 111,501
Trainable params: 25,701
Non-trainable params: 85,800
____________________________________________________________________________________________________
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
input_9 (InputLayer)             (None, None, None, No 0
____________________________________________________________________________________________________
moleculeconv_9 (MoleculeConv)    (None, 512)           85800       input_9[0][0]
____________________________________________________________________________________________________
randommask_6 (RandomMask)        (None, 512)           0           moleculeconv_9[0][0]
____________________________________________________________________________________________________
dense_17 (Dense)                 (None, 50)            25650       randommask_6[0][0]
____________________________________________________________________________________________________
dense_18 (Dense)                 (None, 7)             357         dense_17[0][0]
====================================================================================================
Total params: 111,807
Trainable params: 26,007
Non-trainable params: 85,800
____________________________________________________________________________________________________
ok
Test that we can input. ... ok
Tests that good and bad chemkin files raise proper exceptions ... ERROR:root:Error converting to Cantera format.
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/rmg/main.py", line 1259, in generateCanteraFiles
    parser.convertMech(chemkinFile, transportFile=transportFile, outName=outName, quiet=True, permissive=True, **kwargs)  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 2216, in convertMech
    surface_names = self.writeCTI(name=phaseName, outName=outName)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 2024, in writeCTI
    speciesNames = self.getSpeciesString(self.speciesList, 21)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 1970, in getSpeciesString    raise InputParseError('Undefined elements: ' + str(missingElements))
InputParseError: Undefined elements: set([u'H', u'C'])
WARNING:root:Found additional declaration of species ethane(1)
WARNING:root:Found additional declaration of species CH3(4)
WARNING:root:Found additional thermo entry for species ethane(1). If --permissive was given, the first entry is used.
WARNING:root:Found additional thermo entry for species CH3(4). If --permissive was given, the first entry is used.
WARNING:root:
ERROR: Unable to parse '/home/chao/RMG-Py/rmgpy/temp_dir_for_testing/chem001.inp' near line 36:

ERROR:root:Error converting to Cantera format.
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/rmg/main.py", line 1259, in generateCanteraFiles
    parser.convertMech(chemkinFile, transportFile=transportFile, outName=outName, quiet=True, permissive=True, **kwargs)  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 2216, in convertMech
    surface_names = self.writeCTI(name=phaseName, outName=outName)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 2024, in writeCTI
    speciesNames = self.getSpeciesString(self.speciesList, 21)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cantera/ck2cti.py", line 1964, in getSpeciesString    raise InputParseError('No thermo data found for species: {0!r}'.format(s.label))
InputParseError: No thermo data found for species: u'CH3(4)'
WARNING:root:Found additional declaration of species ethane(1)
WARNING:root:Found additional declaration of species CH3(4)
WARNING:root:Found additional thermo entry for species ethane(1). If --permissive was given, the first entry is used.
WARNING:root:
ERROR: Unable to parse '/home/chao/RMG-Py/rmgpy/temp_dir_for_testing/chem001.inp' near line 33:

ok
basic test that surface movement object management works properly ... ok
Test that CoreEdgeReactionModel.inflate method correctly works. ... ok
Test that CoreEdgeReactionModel.makeNewReaction method correctly works. ... ok
Test that CoreEdgeReactionModel.makeNewSpecies method correctly stores the unique species. ... ok
test that thermoFilterDown with maximumEdgeSpecies = 1 reduces ... ok
test that thermoFilterSpecies leaves species alone if if toleranceThermoKeepInEdge ... ok
Test that the CoreEdgeReactionModel.makeNewSpecies method correctly appends a non-representative resonance ... ok
Test that checkForExistingReaction catches identical reactions. ... ok
Test that checkForExistingReaction eliminates reactions with different templates and duplicate=false ... ok
Test that checkForExistingReaction keeps reactions with different templates and duplicate=True. ... ok
Test that checkForExistingReaction removes duplicate reverse reactions ... ok
Test that getThermoData method of Species works. ... ok
This example is to test if an HTML file can be generated ... ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ok
test_SS_solver (rmgpy.rmg.pdepTest.TestPdep) ... ERROR:root:to TS
ok
test_energy_filter (rmgpy.rmg.pdepTest.TestPdep) ... ERROR:root:to TS
ok
test_flux_filter (rmgpy.rmg.pdepTest.TestPdep) ... ERROR:root:to TS
ok
Test that reaction deflate function works. ... ok
Test if the deflateReaction function works. ... ok
Test that reaction generation from the available families works. ... ok
Test that the reactAll function works. ... ok
Test that reaction generation keeps track of the original species indices. ... ok
Test the default values for the parseCommandLineArguments module ... ok
Test user command line inputs into rmg.py ... ok
Test RMG checkForExistingSpecies can correctly check isomorphism for biaromatics. ... ok
Test RMG work flow can match reaction template for kinetics estimation ... SKIP: WIP test failed: 1 != 2
testRestartFileGenerationAndParsing (rmgpy.rmg.rmgTest.TestRMGWorkFlow) ... ok
Test reading dictionaries ... ok
Test reading an smpty list ... ok
Test reading empty strings ... ok
Test reading floats ... ok
Test reading ints ... ok
Test reading mix of builtin types ... ok
Test reading an object ... ok
Test reading a list of objects ... ok
Test reading strings ... ok
Test saving dictionaries ... ok
Test saving an empty list ... ok
Test saving empty strings ... ok
Test saving floats ... ok
Test saving ints ... ok
Test saving mix of builtin types ... ok
Test saving numpy array ... /home/chao/RMG-Py/rmgpy/rmgobjectTest.py:178: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  result = obj.as_dict()
ok
Test saving another object ... ok
Test saving a list of objects ... ok
Test saving strings ... ok
Test that the WorkerWrapper correctly redirects the error ... Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/scoop_framework/util.py", line 112, in __call__
    return self.myfn(*args, **kwargs)
  File "/home/chao/RMG-Py/rmgpy/scoop_framework/utilTest.py", line 51, in boom
    return 0 / 0
ZeroDivisionError: integer division or modulo by zero

ok
tests that addReactionsToSurface gives the correct surfaceSpecies and surfaceReactions lists after being called ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
Test that a ReactionSystem listener can be attached/detached. ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
Test that data can be retrieved from an attached ReactionSystem listener. ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
Test that a ReactionSystem object can be un/pickled. ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
test that initialize_surface is correctly removing species and reactions when ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
test that the correct maximum under the surface layering constraint is being ... WARNING:root:Generate Output HTML option was turned on. Note that this will slow down model generation.
WARNING:root:Edge species saving was turned on. This will slow down model generation for large simulations.
ok
Test the liquid batch reactor with a simple kinetic model. ... ok
test_compute_derivative (rmgpy.solver.liquidTest.LiquidReactorCheck) ... ok
Test if a specific core species rate is equal to 0 over time. ... ok
Unit test for the jacobian function: ... ok
Check if constant concentration condition is well handled. ... ok
Test if (i) constant species names are stored in reactor attributes and ... ok
Test the solver's ability to simulate a model with collision efficiencies. ... ok
Test the simple batch reactor with a simple kinetic model. Here we ... ok
Test the solver's ability to simulate a model with specific third body species collision efficiencies. ... ok
Test the surface batch reactor with a nondissociative adsorption of CH3 ... Surface site density: 2.72e-05
rxn1 rate coefficient 975571.289043
time:  [0.0]
moles: [array([  1.00000000e+00,   1.80922911e-06,   0.00000000e+00])]
reaction rates: [array([ 398.93602176])]
species rates: [array([-398.93602176, -398.93602176,  398.93602176])]
ok
Test the surface batch reactor with a dissociative adsorption of H2 ... ok
Test that a Cantera Species object is created correctly. ... ok
Test that we can make a copy of a Species object. ... ok
Tests that getResonanceHybrid returns an isomorphic structure ... ok
Test that transport data can be retrieved correctly via the getTransportData method. ... ok
Test that a Species object can be reconstructed from its repr(). ... ok
Test that a Species object can be pickled and unpickled. ... ok
Test that both resonance forms of 1-penten-3-yl are printed by __repr__ ... ok
Test that 1-penten-3-yl makes 2-penten-1-yl resonance isomer ... ok
Test a key-value pair is added to the props attribute of Species. ... ok
Test that Species's props dictionaries are independent of each other. ... ok
Test that toAdjacencyList() works as expected. ... ok
Test that a Species containing a non-representative resonance structure is isomorphic ... ERROR
Test the Conformer.getCenterOfMass() method. ... ok
Test the StatMech.getDensityOfStates() method for ethylene. ... ok
Test the StatMech.getDensityOfStates() method for oxygen. ... ok
Test the StatMech.getEnthalpy() method for ethylene. ... ok
Test the StatMech.getEnthalpy() method for oxygen. ... ok
Test the StatMech.getEntropy() method for ethylene. ... ok
Test the StatMech.getEntropy() method for oxygen. ... ok
Test the StatMech.getHeatCapacity() method for ethylene. ... ok
Test the StatMech.getHeatCapacity() method for oxygen. ... ok
Test the Conformer.getInternalReducedMomentOfInertia() method. ... ok
Test the Conformer.getMomentOfInertiaTensor() method. ... ok
Test the Conformer.getNumberDegreesOfFreedom() method. ... ok
Test the StatMech.getPartitionFunction() method for ethylene. ... ok
Test the StatMech.getPartitionFunction() method for oxygen. ... ok
Test the Conformer.getPrincipalMomentsOfInertia() method. ... ok
Test the StatMech.getSumOfStates() method for ethylene. ... ok
Test the StatMech.getSumOfStates() method for oxygen. ... ok
Test the Conformer.getTotalMass() method. ... ok
Test the KRotor.getDensityOfStates() method using a classical ... ok
Test the KRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the KRotor.getEnthalpy() method using a classical rotor. ... ok
Test the KRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the KRotor.getEntropy() method using a classical rotor. ... ok
Test the KRotor.getEntropy() method using a quantum rotor. ... ok
Test the KRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the KRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the KRotor.getLevelDegeneracy() method. ... ok
Test the KRotor.getLevelEnergy() method. ... ok
Test the KRotor.getPartitionFunction() method for a classical ... ok
Test the KRotor.getPartitionFunction() method for a quantum ... ok
Test getting the KRotor.rotationalConstant property. ... ok
Test the KRotor.getSumOfStates() method using a classical rotor. ... ok
Test the KRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a KRotor object can be pickled and unpickled with no loss ... ok
Test that a KRotor object can be reconstructed from its repr() output ... ok
Test setting the KRotor.rotationalConstant property. ... ok
Test the LinearRotor.getDensityOfStates() method using a classical ... ok
Test the LinearRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the LinearRotor.getEnthalpy() method using a classical rotor. ... ok
Test the LinearRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the LinearRotor.getEntropy() method using a classical rotor. ... ok
Test the LinearRotor.getEntropy() method using a quantum rotor. ... ok
Test the LinearRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the LinearRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the LinearRotor.getLevelDegeneracy() method. ... ok
Test the LinearRotor.getLevelEnergy() method. ... ok
Test the LinearRotor.getPartitionFunction() method for a classical ... ok
Test the LinearRotor.getPartitionFunction() method for a quantum ... ok
Test getting the LinearRotor.rotationalConstant property. ... ok
Test the LinearRotor.getSumOfStates() method using a classical rotor. ... ok
Test the LinearRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a LinearRotor object can be pickled and unpickled with no ... ok
Test that a LinearRotor object can be reconstructed from its repr() ... ok
Test setting the LinearRotor.rotationalConstant property. ... ok
Test the NonlinearRotor.getDensityOfStates() method using a classical ... ok
Test the NonlinearRotor.getEnthalpy() method using a classical rotor. ... ok
Test the NonlinearRotor.getEntropy() method using a classical rotor. ... ok
Test the NonlinearRotor.getHeatCapacity() method using a classical ... ok
Test the NonlinearRotor.getPartitionFunction() method for a classical ... ok
Test getting the NonlinearRotor.rotationalConstant property. ... ok
Test the NonlinearRotor.getSumOfStates() method using a classical rotor. ... ok
Test that a NonlinearRotor object can be pickled and unpickled with ... ok
Test that a NonlinearRotor object can be reconstructed from its ... ok
Test setting the NonlinearRotor.rotationalConstant property. ... ok
Test the SphericalTopRotor.getDensityOfStates() method using a classical ... ok
Test the SphericalTopRotor.getDensityOfStates() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getEnthalpy() method using a classical rotor. ... ok
Test the SphericalTopRotor.getEnthalpy() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getEntropy() method using a classical rotor. ... ok
Test the SphericalTopRotor.getEntropy() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getHeatCapacity() method using a classical rotor. ... ok
Test the SphericalTopRotor.getHeatCapacity() method using a quantum rotor. ... ok
Test the SphericalTopRotor.getLevelDegeneracy() method. ... ok
Test the SphericalTopRotor.getLevelEnergy() method. ... ok
Test the SphericalTopRotor.getPartitionFunction() method for a classical ... ok
Test the SphericalTopRotor.getPartitionFunction() method for a quantum ... ok
Test getting the SphericalTopRotor.rotationalConstant property. ... ok
Test the SphericalTopRotor.getSumOfStates() method using a classical rotor. ... ok
Test the SphericalTopRotor.getSumOfStates() method using a quantum rotor. ... ok
Test that a SphericalTopRotor object can be pickled and unpickled ... ok
Test that a SphericalTopRotor object can be reconstructed from its ... ok
Test setting the SphericalTopRotor.rotationalConstant property. ... ok
Test the getDensityOfStates() method. ... ok
Test the getEnthalpy() method. ... ok
Test the getEntropy() method. ... ok
Test the getHeatCapacity() method. ... ok
Test the getPartitionFunction() method. ... ok
Test the HinderedRotor.getDensityOfStates() method using a classical ... ok
Test the HinderedRotor.getDensityOfStates() method using a Fourier ... ok
Test the HinderedRotor.getDensityOfStates() method using a classical ... ok
Test the HinderedRotor.getDensityOfStates() method using a Fourier ... ok
Test the HinderedRotor.getEnthalpy() method using a cosine potential ... ok
Test the HinderedRotor.getEnthalpy() method using a Fourier series ... ok
Test the FreeRotor.getEnthalpy() method ... ok
Test the HinderedRotor.getEnthalpy() method using a cosine potential ... ok
Test the HinderedRotor.getEnthalpy() method using a Fourier series ... ok
Test the HinderedRotor.getEntropy() method using a cosine potential ... ok
Test the HinderedRotor.getEntropy() method using a Fourier series ... ok
test_getEntropy_free (rmgpy.statmech.torsionTest.TestHinderedRotor) ... ok
Test the HinderedRotor.getEntropy() method using a cosine potential ... ok
Test the HinderedRotor.getEntropy() method using a Fourier series ... ok
Test the HinderedRotor.getHeatCapacity() method using a cosine ... ok
Test the HinderedRotor.getHeatCapacity() method using a Fourier series ... ok
Test the FreeRotor.getHeatCapacity() method ... ok
Test the HinderedRotor.getHeatCapacity() method using a cosine ... ok
Test the HinderedRotor.getHeatCapacity() method using a Fourier series ... ok
Test the HinderedRotor.getPartitionFunction() method for a cosine ... ok
Test the HinderedRotor.getPartitionFunction() method for a Fourier ... ok
Test the FreeRotor.getPartitionFunction() method ... ok
Test the HinderedRotor.getPartitionFunction() method for a cosine ... ok
Test the HinderedRotor.getPartitionFunction() method for a Fourier ... ok
Test the HinderedRotor.getPotential() method for a cosine potential. ... ok
Test the HinderedRotor.getPotential() method for a Fourier series ... ok
Test getting the HinderedRotor.rotationalConstant property. ... ok
Test the HinderedRotor.getSumOfStates() method using a cosine potential ... ok
Test the HinderedRotor.getSumOfStates() method using a Fourier series ... ok
Test the HinderedRotor.getSumOfStates() method using a cosine potential ... ok
Test the HinderedRotor.getSumOfStates() method using a Fourier series ... ok
Test that a HinderedRotor object can be pickled and unpickled with no ... ok
Test that a HinderedRotor object can be reconstructed from its repr() ... ok
Test setting the HinderedRotor.rotationalConstant property. ... ok
Test the IdealGasTranslation.getDensityOfStates() method using a ... ok
Test the IdealGasTranslation.getEnthalpy() method using a classical ... ok
Test the IdealGasTranslation.getEntropy() method using a classical ... ok
Test the IdealGasTranslation.getHeatCapacity() method using a classical ... ok
Test the IdealGasTranslation.getPartitionFunction() method for a ... ok
Test the IdealGasTranslation.getSumOfStates() method using a classical ... ok
Test that a IdealGasTranslation object can be pickled and unpickled ... ok
Test that an IdealGasTranslation object can be reconstructed from its ... ok
Test the HarmonicOscillator.getDensityOfStates() method using a set of ... ok
Test the HarmonicOscillator.getDensityOfStates() method using a set of ... ok
Test the HarmonicOscillator.getEnthalpy() method using a set of ... ok
Test the HarmonicOscillator.getEnthalpy() method using a set of quantum ... ok
Test the HarmonicOscillator.getEntropy() method using a set of ... ok
Test the HarmonicOscillator.getEntropy() method using a set of quantum ... ok
Test the HarmonicOscillator.getHeatCapacity() method using a set of ... ok
Test the HarmonicOscillator.getHeatCapacity() method using a set of ... ok
Test the HarmonicOscillator.getPartitionFunction() method for a set of ... ok
Test the HarmonicOscillator.getPartitionFunction() method for a set of ... ok
Test the HarmonicOscillator.getSumOfStates() method using a set of ... ok
Test the HarmonicOscillator.getSumOfStates() method using a set of ... ok
Test that a HarmonicOscillator object can be pickled and unpickled ... ok
Test that a HarmonicOscillator object can be reconstructed from its ... ok
Tests if the statistics output file can be found. ... ok
Test round-trip conversion from Wilhoit to NASA and back ... ok
Test round-trip conversion from Wilhoit to ThermoData and back ... ok
Test the conversion of a NASA model to a ThermoData model. ... ok
Test the conversion of a NASA model to a Wilhoit model. ... ok
Test the conversion of a ThermoData model to a NASA model. ... ok
Test the conversion of a ThermoData model to a Wilhoit model. ... ok
Test the conversion of a Wilhoit model to a NASA model. ... ok
Test the conversion of a Wilhoit model to a ThermoData model. ... ok
Test if the entropy computed from other thermo implementations is close to what NASA computes. ... ok
Test that the NASA comment property was properly set. ... ok
Test that the NASA E0 property was properly set. ... ok
Test that the NASA Tmax property was properly set. ... ok
Test that the NASA Tmin property was properly set. ... ok
Test the NASA.getEnthalpy() method. ... ok
Test the NASA.getEntropy() method. ... ok
Test the NASA.getFreeEnergy() method. ... ok
Test the NASA.getHeatCapacity() method. ... ok
Test the NASA.isTemperatureValid() method. ... ok
Test that a NASA object can be pickled and unpickled with no loss of ... ok
Test that the NASA high-temperature polynomial was properly set. ... ok
Test that the NASA low-temperature polynomial was properly set. ... ok
Test that a NASA object can be reconstructed from its repr() output ... ok
Test that conversion to a Cantera NasaPoly2 object works ... ok
Test that the ThermoData comment property was properly set. ... ok
Test that the ThermoData Cp0 property was properly set. ... ok
Test that the ThermoData CpInf property was properly set. ... ok
Test that the ThermoData Cpdata property was properly set. ... ok
Test that the ThermoData E0 property was properly set. ... ok
Test that the ThermoData H298 property was properly set. ... ok
Test that the ThermoData S298 property was properly set. ... ok
Test that the ThermoData Tdata property was properly set. ... ok
Test that the ThermoData Tmax property was properly set. ... ok
Test that the ThermoData Tmin property was properly set. ... ok
Test the ThermoData.getEnthalpy() method. ... ok
Test the ThermoData.getEntropy() method. ... ok
Test the ThermoData.getFreeEnergy() method. ... ok
Test the ThermoData.getHeatCapacity() method. ... ok
Test the ThermoData.isTemperatureValid() method. ... ok
Test that a ThermoData object can be successfully pickled and ... ok
Test that a ThermoData object can be successfully reconstructed from its ... ok
Test if the entropy computed from other thermo implementations is close to what Wilhoit computes. ... ok
Test that the Wilhoit B property was properly set. ... ok
Test that the Wilhoit Cp0 property was properly set. ... ok
Test that the Wilhoit CpInf property was properly set. ... ok
Test that the Wilhoit E0 property is properly calculated from Enthalpy at 0.001 K ... ok
Test that the Wilhoit H0 property was properly set. ... ok
Test that the Wilhoit S0 property was properly set. ... ok
Test that the Wilhoit Tmax property was properly set. ... ok
Test that the Wilhoit Tmin property was properly set. ... ok
Test that the Wilhoit a0 property was properly set. ... ok
Test that the Wilhoit a1 property was properly set. ... ok
Test that the Wilhoit a2 property was properly set. ... ok
Test that the Wilhoit a3 property was properly set. ... ok
Test that the Wilhoit comment property was properly set. ... ok
Test the Wilhoit.fitToData() method. ... ok
Test the Wilhoit.getEnthalpy() method. ... ok
Test the Wilhoit.getEntropy() method. ... ok
Test the Wilhoit.getFreeEnergy() method. ... ok
Test the Wilhoit.getHeatCapacity() method. ... ok
Test the Wilhoit.isTemperatureValid() method. ... ok
Test that a Wilhoit object can be pickled and unpickled with no loss ... ok
Test that a Wilhoit object can be reconstructed from its repr() output ... ok
Test that findIgnitionDelay() works. ... ok
Test that the repr function for a CanteraCondition object can reconstitute ... ok
Test that species objects convert properly ... ok
Test that species objects convert properly ... ok
test_identical_models (rmgpy.tools.diff_modelsTest.DiffModelsTest) ... ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ERROR:root:Cairo not found; molecule will not be drawn.
ok
WARNING:root:Reaction indices 13 and 15 were marked as duplicate.
Test that isotope partitioning algorithm works with Reaction objects ... ok
Test that isotope partitioning algorithm work with Reaction Objects. ... ok
Test that compareIsotomers works on species objects ... ok
Test that compareIsotomers fails on different reaction objects ... ok
Test that compareIsotomers fails on species objects ... ok
Test that compareIsotomers works on different reaction objects ... ok
Test that compareIsotomers works on species objects ... ok
Tests that correctEntropy effectively makes the isotopomer have the same ... ok
Tests that the direction of the reaction is constant for every isotopomer ... WARNING:root:Reaction methyli + propyl <=> methanei + dipropyl did not find proper reverse template, might cause degeneracy error.
WARNING:root:Reaction methyli + propyli <=> methanei + dipropyli did not find proper reverse template, might cause degeneracy error.
ok
shows that all isotope reactions are created with generateIsotopeReactions ... ok
shows that all isotope reactions are created with generateIsotopeReactions ... ok
Test that the generation of isotopomers with N isotopes works. ... ok
testGetKineticIsotopeEffectSimple (rmgpy.tools.isotopesTest.IsotopesTest) ... ok
tests to ensure that get_labeled_reactants returns labeled reactants ... ok
tests that get_reduced_mass returns the proper value for H_abstraction ... ok
tests that get_reduced_mass returns proper value when isotopes are labeled ... ok
Test that removeIsotope and redoIsotope works with reactions ... ok
ensures the Enriched method functions ... ok
Test that remove isotope algorithm works with Reaction objects. ... ok
Test that remove isotope algorithm works with Species. ... ok
Tests that ensure reaction direction can handle multiple transition states ... ok
test_liquid (rmgpy.tools.simulateTest.SimulateTest) ... Simulation took 4.30478000641 seconds
ok
test_minimal (rmgpy.tools.simulateTest.SimulateTest) ... Simulation took 1.25977110863 seconds
ok
Test that the thermo and kinetic parameter uncertainties can be properly assigned. ... ok
Test that the TransportData comment property was properly set. ... ok
Test that the TransportData dipoleMoment property was properly set. ... ok
Test that the TransportData epsilon property was properly set. ... ok
Test the LennardJones.getCollisionFrequency() method. ... ok
Test that a TransportData object can be pickled and unpickled with no loss of information. ... ok
Test that the TransportData polarizability property was properly set. ... ok
Test that a TransportData object can be reconstructed from its repr() output with no loss of information ... ok
Test that the TransportData rotrelaxcollnum property was properly set. ... ok
Test that the TransportData shapeIndex property was properly set. ... ok
Test that the TransportData sigma property was properly set. ... ok
Test that the Cantera GasTransportData creation is successful. ... ok
test the check_conformer_energy function with an list of energies. ... ok
Test loading of species input file. ... ok
Test loading of statmech job from species input file. ... ok
Test thermo job execution for species from separate input file. ... ok
Test loading of transition state input file. ... ok
Test loading of statmech job from transition state input file. ... ok
Test the calculation of the high-pressure limit rate coef for one of the kinetics jobs at Tmin and Tmax. ... ok
Test the generated temperature list. ... ok
Test the master equation solution method chosen. ... ok
Test the number of isomers identified. ... ok
Test the whether or not RMG mode is turned on. ... ok
Test the number of products identified. ... ok
Test the number of reactants identified. ... ok
Test a path reaction label ... ok
Test the number pressures specified. ... ok
Test the minimum pressure value. ... ok
Test the pressure list. ... ok
Test the whether or not RMG mode is turned on. ... ok
Test the number temperatures specified. ... ok
Test the temperature list. ... ok
Test the Temperature Units. ... ok
Test the temperature value. ... ok
Test the whether or not tunneling has been included in a specific kinetics job. ... ok
Test the max grain size value. ... ok
Test properly dumping the ArkaneSpecies object and respective sub-objects ... WARNING:root:Ignoring frequency scale factor in species file '/home/chao/RMG-Py/examples/arkane/species/C2H6/C2H6.py'.
ok
Test properly loading the ArkaneSpecies object and respective sub-objects ... ok
Test that the correct mass/number/isotop is returned from get_element_mass ... WARNING:root:Assuming isotop 247 is representative of element Bk
ok
Test that the proper error is raised if gaussian geometry and frequency file paths are the same ... ok
Ensures that determine_qm_software returns a GaussianLog object ... ok
Uses a Gaussian03 log file for ethylene (C2H4) to test that its ... SKIP: WIP test failed: 649.0540018086614 != 2596.22 within 0.01 delta
Uses a Gaussian03 log file for ethylene (C2H4) to test that its ... SKIP: WIP test failed: 633.5254721860014 != 2534.1 within 0.01 delta
Uses a Gaussian03 log file for oxygen (O2) to test that its ... ok
Uses a Gaussian03 log file for oxygen (O2) to test that its ... ok
Uses a Molpro log file for ethylene_dz (C2H4) to test that F12a ... ok
Uses a molpro log file for HOSI to test that its ... ok
Uses a Molpro log file for ethylene_qz (C2H4) to test that F12b ... ok
Uses a Molpro log file for OH (C2H4) to test that radical ... ok
Load the MRCI and MRCI+Davidson energies from a molpro output file ... ok
Uses a QChem log files to test that ... ok
Uses a QChem log file for CO to test that its ... ok
Uses a QChem log file for npropyl to test that its ... ok
Uses a QChem log files to test that ... ok
Uses a QChem log files to test that ... ok
Uses a QChem log file for npropyl to test that its ... ok
Test that the proper error is raised if gaussian geometry and frequency file paths are not the same ... ok
Test that the correct symmetry number is determined for rotor potential scans. ... ok

======================================================================
ERROR: testDrawNonStandardBonds (rmgpy.molecule.drawTest.TestMoleculeDrawer)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/drawTest.py", line 122, in testDrawNonStandardBonds
    from cairocffi import PDFSurface
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cairocffi/__init__.py", line 40, in <module>
    'cairo', 'libcairo-2')
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cairocffi/__init__.py", line 34, in dlopen
    return ffi.dlopen(names[0])  # pragma: no cover
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cffi/api.py", line 146, in dlopen
    lib, function_cache = _make_ffi_library(self, name, flags)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cffi/api.py", line 828, in _make_ffi_library
    backendlib = _load_backend_lib(backend, libname, flags)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/cffi/api.py", line 824, in _load_backend_lib
    return backend.load_library(path, flags)
OSError: cannot load library '/home/chao/anaconda2/envs/rmg_env/lib/libcairo.so.2': libXrender.so.1: cannot open shared object file: No such file or directory

======================================================================
ERROR: Test we can create PDF files from molecules.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/drawTest.py", line 79, in testDrawPDF
    from cairo import PDFSurface
ImportError: No module named cairo

======================================================================
ERROR: Test we can create PDF surface without a temporary file (newer versions of PyCairo?)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/drawTest.py", line 112, in testDrawPDFwithoutFile
    from cairo import PDFSurface
ImportError: No module named cairo

======================================================================
ERROR: Test we can create PNG files from molecules.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/drawTest.py", line 63, in testDrawPNG
    from cairo import ImageSurface
ImportError: No module named cairo

======================================================================
ERROR: Test we can draw a polycyclic molecule
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/drawTest.py", line 95, in testDrawPolycycle
    from cairo import PDFSurface
ImportError: No module named cairo

======================================================================
ERROR: Test that birads on `S u2 p0` are penalized
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/filtrationTest.py", line 104, in penalty_birads_replacing_lone_pairs_test
    mol_list = generate_resonance_structures(mol, keep_isomorphic=False, filter_structures=True)
  File "rmgpy/molecule/resonance.py", line 151, in rmgpy.molecule.resonance.generate_resonance_structures
    def generate_resonance_structures(mol, clar_structures=True, keep_isomorphic=False, filter_structures=True):
  File "rmgpy/molecule/resonance.py", line 240, in rmgpy.molecule.resonance.generate_resonance_structures
    return filtration.filter_structures(mol_list, features=features)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 80, in filter_structures
    mark_unreactive_structures(filtered_list, mol_list)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 412, in mark_unreactive_structures
    mol.toSMILES(),filtered_list[0].toSMILES()))
  File "rmgpy/molecule/molecule.py", line 1612, in rmgpy.molecule.molecule.Molecule.toSMILES
    def toSMILES(self):
  File "rmgpy/molecule/molecule.py", line 1626, in rmgpy.molecule.molecule.Molecule.toSMILES
    return translator.toSMILES(self)
  File "rmgpy/molecule/translator.py", line 223, in rmgpy.molecule.translator.toSMILES
    def toSMILES(mol, backend='default'):
  File "rmgpy/molecule/translator.py", line 249, in rmgpy.molecule.translator.toSMILES
    return _write(mol, 'smi', backend='openbabel')
  File "rmgpy/molecule/translator.py", line 539, in rmgpy.molecule.translator._write
    raise ValueError("Unable to generate identifier type {0} with backend {1}.".format(identifier_type, backend))
ValueError: Unable to generate identifier type smi with backend openbabel.

======================================================================
ERROR: Test that an O4tc atomType with octet 8 gets penalized in the electronegativity heuristic
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/filtrationTest.py", line 87, in penalty_for_O4tc_test
    mol_list = generate_resonance_structures(mol)
  File "rmgpy/molecule/resonance.py", line 151, in rmgpy.molecule.resonance.generate_resonance_structures
    def generate_resonance_structures(mol, clar_structures=True, keep_isomorphic=False, filter_structures=True):
  File "rmgpy/molecule/resonance.py", line 240, in rmgpy.molecule.resonance.generate_resonance_structures
    return filtration.filter_structures(mol_list, features=features)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 80, in filter_structures
    mark_unreactive_structures(filtered_list, mol_list)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 412, in mark_unreactive_structures
    mol.toSMILES(),filtered_list[0].toSMILES()))
  File "rmgpy/molecule/molecule.py", line 1612, in rmgpy.molecule.molecule.Molecule.toSMILES
    def toSMILES(self):
  File "rmgpy/molecule/molecule.py", line 1626, in rmgpy.molecule.molecule.Molecule.toSMILES
    return translator.toSMILES(self)
  File "rmgpy/molecule/translator.py", line 223, in rmgpy.molecule.translator.toSMILES
    def toSMILES(mol, backend='default'):
  File "rmgpy/molecule/translator.py", line 249, in rmgpy.molecule.translator.toSMILES
    return _write(mol, 'smi', backend='openbabel')
  File "rmgpy/molecule/translator.py", line 539, in rmgpy.molecule.translator._write
    raise ValueError("Unable to generate identifier type {0} with backend {1}.".format(identifier_type, backend))
ValueError: Unable to generate identifier type smi with backend openbabel.

======================================================================
ERROR: Test that a png representation can be created.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/groupTest.py", line 1357, in test_repr_png
    result = group._repr_png_()
  File "rmgpy/molecule/group.py", line 985, in rmgpy.molecule.group.Group._repr_png_
    return self.draw('png')
  File "rmgpy/molecule/group.py", line 1010, in rmgpy.molecule.group.Group.draw
    img = graph.create(prog='neato', format=format)
  File "build/bdist.linux-x86_64/egg/pydot.py", line 1891, in create
    err=stderr_data))
KeyError: 'cmdline'

======================================================================
ERROR: Test that we can generate a few SMILES strings as expected
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/moleculeTest.py", line 1321, in testSMILES
    self.assertEqual(s, molecule.toSMILES())
  File "rmgpy/molecule/molecule.py", line 1612, in rmgpy.molecule.molecule.Molecule.toSMILES
    def toSMILES(self):
  File "rmgpy/molecule/molecule.py", line 1626, in rmgpy.molecule.molecule.Molecule.toSMILES
    return translator.toSMILES(self)
  File "rmgpy/molecule/translator.py", line 223, in rmgpy.molecule.translator.toSMILES
    def toSMILES(mol, backend='default'):
  File "rmgpy/molecule/translator.py", line 249, in rmgpy.molecule.translator.toSMILES
    return _write(mol, 'smi', backend='openbabel')
  File "rmgpy/molecule/translator.py", line 539, in rmgpy.molecule.translator._write
    raise ValueError("Unable to generate identifier type {0} with backend {1}.".format(identifier_type, backend))
ValueError: Unable to generate identifier type smi with backend openbabel.

======================================================================
ERROR: test_C3H2 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 157, in test_C3H2
    path = find_allyl_end_with_charge(start)[0]
IndexError: list index out of range

======================================================================
ERROR: test_C3H4 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 167, in test_C3H4
    path = find_allyl_end_with_charge(start)[0]
IndexError: list index out of range

======================================================================
ERROR: test_C3H4O4 (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 198, in test_C3H4O4
    path = find_allyl_end_with_charge(start)[0]
IndexError: list index out of range

======================================================================
ERROR: test_C5H6O (rmgpy.molecule.pathfinderTest.FindAllylEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 208, in test_C5H6O
    path = find_allyl_end_with_charge(start)[0]
IndexError: list index out of range

======================================================================
ERROR: test_C6H6O4 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 317, in test_C6H6O4
    mol = Molecule().fromInChI(inchi)
  File "rmgpy/molecule/molecule.py", line 1468, in rmgpy.molecule.molecule.Molecule.fromInChI
    def fromInChI(self, inchistr, backend='try-all'):
  File "rmgpy/molecule/molecule.py", line 1472, in rmgpy.molecule.molecule.Molecule.fromInChI
    translator.fromInChI(self, inchistr, backend)
  File "rmgpy/molecule/translator.py", line 257, in rmgpy.molecule.translator.fromInChI
    def fromInChI(mol, inchistr, backend='try-all'):
  File "rmgpy/molecule/translator.py", line 266, in rmgpy.molecule.translator.fromInChI
    return _read(mol, inchistr, 'inchi', backend)
  File "rmgpy/molecule/translator.py", line 504, in rmgpy.molecule.translator._read
    raise ValueError("Unable to correctly parse {0} with backend {1}.".format(identifier, backend))
ValueError: Unable to correctly parse InChI=1S/C6H6O4/c1-2-4-9-6(7)3-5-10-8/h2-3H,1,5H2 with backend try-all.

======================================================================
ERROR: test_C6H6O6 (rmgpy.molecule.pathfinderTest.FindButadieneEndWithChargeTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 330, in test_C6H6O6
    idx_path = [mol.atoms.index(atom)+1 for atom in path[0::2]]
TypeError: 'NoneType' object has no attribute '__getitem__'

======================================================================
ERROR: Test resonance structure generation for aromatic species with lone pair <=> radical resonance
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/resonanceTest.py", line 258, in testAromaticWithLonePairResonance
    molList = generate_resonance_structures(Molecule(SMILES="c1ccccc1CC=N[O]"))
  File "rmgpy/molecule/resonance.py", line 151, in rmgpy.molecule.resonance.generate_resonance_structures
    def generate_resonance_structures(mol, clar_structures=True, keep_isomorphic=False, filter_structures=True):
  File "rmgpy/molecule/resonance.py", line 240, in rmgpy.molecule.resonance.generate_resonance_structures
    return filtration.filter_structures(mol_list, features=features)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 80, in filter_structures
    mark_unreactive_structures(filtered_list, mol_list)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 412, in mark_unreactive_structures
    mol.toSMILES(),filtered_list[0].toSMILES()))
  File "rmgpy/molecule/molecule.py", line 1612, in rmgpy.molecule.molecule.Molecule.toSMILES
    def toSMILES(self):
  File "rmgpy/molecule/molecule.py", line 1626, in rmgpy.molecule.molecule.Molecule.toSMILES
    return translator.toSMILES(self)
  File "rmgpy/molecule/translator.py", line 223, in rmgpy.molecule.translator.toSMILES
    def toSMILES(mol, backend='default'):
  File "rmgpy/molecule/translator.py", line 249, in rmgpy.molecule.translator.toSMILES
    return _write(mol, 'smi', backend='openbabel')
  File "rmgpy/molecule/translator.py", line 539, in rmgpy.molecule.translator._write
    raise ValueError("Unable to generate identifier type {0} with backend {1}.".format(identifier_type, backend))
ValueError: Unable to generate identifier type smi with backend openbabel.

======================================================================
ERROR: testC3H4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1280, in testC3H4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: testC4H6O (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1228, in testC4H6O
    mol = self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: testC4H6O_2 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1241, in testC4H6O_2
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [4, 5] provided in the molecule: multiplicity 3
1  O u0 p2 c0 {4,D}
2  C u0 p0 c0 {3,S} {4,S} {6,S} {7,S}
3  C u0 p0 c0 {2,S} {5,D} {8,S}
4  C u0 p0 c0 {1,D} {2,S} {9,S}
5  C u0 p0 c0 {3,D} {10,S} {11,S}
6  H u0 p0 c0 {2,S}
7  H u0 p0 c0 {2,S}
8  H u0 p0 c0 {3,S}
9  H u0 p0 c0 {4,S}
10 H u0 p0 c0 {5,S}
11 H u0 p0 c0 {5,S}
.

======================================================================
ERROR: testC5H6O (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1190, in testC5H6O
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [2, 6] provided in the molecule: multiplicity 3
1  O u0 p3 c-1 {3,S}
2  C u0 p0 c0 {3,S} {5,S} {7,S} {8,S}
3  C u0 p0 c0 {1,S} {2,S} {4,S} {9,S}
4  C u0 p0 c+1 {3,S} {6,S} {11,S}
5  C u0 p0 c0 {2,S} {6,D} {10,S}
6  C u0 p0 c0 {4,S} {5,D} {12,S}
7  H u0 p0 c0 {2,S}
8  H u0 p0 c0 {2,S}
9  H u0 p0 c0 {3,S}
10 H u0 p0 c0 {5,S}
11 H u0 p0 c0 {4,S}
12 H u0 p0 c0 {6,S}
.

======================================================================
ERROR: testC5H6O_2 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1195, in testC5H6O_2
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: testC5H6O_3 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1200, in testC5H6O_3
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 127, in check_multiplicity
    if not int(multiplicity) in [4,2]: raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 5 not in agreement with total number of radicals 3.

======================================================================
ERROR: testC6H6 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1236, in testC6H6
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 3] provided in the molecule: multiplicity 3
1  C u0 p0 c0 {2,S} {5,S} {7,S} {8,S}
2  C u0 p0 c0 {1,S} {4,D} {9,S}
3  C u0 p0 c0 {4,D} {10,S} {11,S}
4  C u0 p0 c0 {2,D} {3,D}
5  C u0 p0 c0 {1,S} {6,T}
6  C u0 p0 c0 {5,T} {12,S}
7  H u0 p0 c0 {1,S}
8  H u0 p0 c0 {1,S}
9  H u0 p0 c0 {2,S}
10 H u0 p0 c0 {3,S}
11 H u0 p0 c0 {3,S}
12 H u0 p0 c0 {6,S}
.

======================================================================
ERROR: testQuadri2DoubleBondMult5 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1185, in testQuadri2DoubleBondMult5
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2, 5, 6] provided in the molecule: multiplicity 5
1  C u0 p0 c0 {2,S} {3,S} {5,S} {9,S}
2  C u0 p0 c0 {1,S} {4,S} {6,S} {10,S}
3  C u0 p0 c0 {1,S} {11,S} {12,S} {13,S}
4  C u0 p0 c0 {2,S} {14,S} {15,S} {16,S}
5  C u0 p0 c0 {1,S} {7,D} {17,S}
6  C u0 p0 c0 {2,S} {8,D} {18,S}
7  C u0 p0 c0 {5,D} {19,S} {20,S}
8  C u0 p0 c0 {6,D} {21,S} {22,S}
9  H u0 p0 c0 {1,S}
10 H u0 p0 c0 {2,S}
11 H u0 p0 c0 {3,S}
12 H u0 p0 c0 {3,S}
13 H u0 p0 c0 {3,S}
14 H u0 p0 c0 {4,S}
15 H u0 p0 c0 {4,S}
16 H u0 p0 c0 {4,S}
17 H u0 p0 c0 {5,S}
18 H u0 p0 c0 {6,S}
19 H u0 p0 c0 {7,S}
20 H u0 p0 c0 {7,S}
21 H u0 p0 c0 {8,S}
22 H u0 p0 c0 {8,S}
.

======================================================================
ERROR: testQuadriRadicalDoubleBondZwitterMult5 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1180, in testQuadriRadicalDoubleBondZwitterMult5
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2, 6] provided in the molecule: multiplicity 5
1  C u0 p0 c0 {2,S} {4,S} {6,S} {9,S}
2  C u0 p0 c0 {1,S} {5,S} {10,S} {11,S}
3  C u0 p0 c0 {5,S} {7,S} {12,S} {13,S}
4  C u0 p0 c0 {1,S} {14,S} {15,S} {16,S}
5  C u1 p0 c0 {2,S} {3,S} {17,S}
6  C u0 p0 c0 {1,S} {8,D} {18,S}
7  C u0 p1 c-1 {3,S} {19,S} {20,S}
8  C u0 p0 c0 {6,D} {21,S} {22,S}
9  H u0 p0 c0 {1,S}
10 H u0 p0 c0 {2,S}
11 H u0 p0 c0 {2,S}
12 H u0 p0 c0 {3,S}
13 H u0 p0 c0 {3,S}
14 H u0 p0 c0 {4,S}
15 H u0 p0 c0 {4,S}
16 H u0 p0 c0 {4,S}
17 H u0 p0 c0 {5,S}
18 H u0 p0 c0 {6,S}
19 H u0 p0 c0 {7,S}
20 H u0 p0 c0 {7,S}
21 H u0 p0 c0 {8,S}
22 H u0 p0 c0 {8,S}
.

======================================================================
ERROR: testTriRadical2DoubleBondMult4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1175, in testTriRadical2DoubleBondMult4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2, 5] provided in the molecule: multiplicity 4
1  C u0 p0 c0 {2,S} {3,S} {4,S} {7,S}
2  C u0 p0 c0 {1,S} {8,S} {9,S} {10,S}
3  C u0 p0 c0 {1,S} {5,D} {11,S}
4  C u0 p0 c0 {1,S} {6,D} {12,S}
5  C u0 p0 c0 {3,D} {13,S} {14,S}
6  C u1 p0 c0 {4,D} {15,S}
7  H u0 p0 c0 {1,S}
8  H u0 p0 c0 {2,S}
9  H u0 p0 c0 {2,S}
10 H u0 p0 c0 {2,S}
11 H u0 p0 c0 {3,S}
12 H u0 p0 c0 {4,S}
13 H u0 p0 c0 {5,S}
14 H u0 p0 c0 {5,S}
15 H u0 p0 c0 {6,S}
.

======================================================================
ERROR: testTriRadicalDoubleBondMult4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1170, in testTriRadicalDoubleBondMult4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2] provided in the molecule: multiplicity 4
1  C u0 p0 c0 {2,S} {3,S} {5,S} {6,S}
2  C u0 p0 c0 {1,S} {4,D} {7,S}
3  C u1 p0 c0 {1,S} {8,S} {9,S}
4  C u0 p0 c0 {2,D} {10,S} {11,S}
5  H u0 p0 c0 {1,S}
6  H u0 p0 c0 {1,S}
7  H u0 p0 c0 {2,S}
8  H u0 p0 c0 {3,S}
9  H u0 p0 c0 {3,S}
10 H u0 p0 c0 {4,S}
11 H u0 p0 c0 {4,S}
.

======================================================================
ERROR: testTriRadicalZwitterMult4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1165, in testTriRadicalZwitterMult4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 125, in check_multiplicity
    if not int(multiplicity) in [1,3]: raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 4 not in agreement with total number of radicals 2.

======================================================================
ERROR: test_C2H2O3 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1300, in test_C2H2O3
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 295, in rmgpy.molecule.translator.fromAugmentedInChI
    mol.updateAtomTypes()
  File "rmgpy/molecule/molecule.py", line 1204, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    raise
  File "rmgpy/molecule/molecule.py", line 1199, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    atom.atomType = getAtomType(atom, atom.edges)
  File "rmgpy/molecule/atomtype.py", line 727, in rmgpy.molecule.atomtype.getAtomType
    def getAtomType(atom, bonds):
  File "rmgpy/molecule/atomtype.py", line 763, in rmgpy.molecule.atomtype.getAtomType
    raise AtomTypeError(
AtomTypeError: Unable to determine atom type for atom O., which has 1 single bonds, 1 double bonds to C, 0 double bonds to O, 0 double bonds to S, 0 triple bonds, 0 benzene bonds, 0 lone pairs, and 1 charge.

======================================================================
ERROR: test_C2H3_triradical_parsing (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1140, in test_C2H3_triradical_parsing
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 1] provided in the molecule: multiplicity 4
1 C u0 p0 c0 {2,D} {3,S} {4,S}
2 C u1 p0 c0 {1,D} {5,S}
3 H u0 p0 c0 {1,S}
4 H u0 p0 c0 {1,S}
5 H u0 p0 c0 {2,S}
.

======================================================================
ERROR: test_C3H2 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1327, in test_C3H2
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1109, in compare
    aug_inchi_computed = re.split(ignore_prefix, spc.getAugmentedInChI())[-1]
  File "rmgpy/species.py", line 595, in rmgpy.species.Species.getAugmentedInChI
    self.aug_inchi = self.generate_aug_inchi()
  File "rmgpy/species.py", line 612, in rmgpy.species.Species.generate_aug_inchi
    return candidates[0][0]
IndexError: list index out of range

======================================================================
ERROR: test_C3H2O3 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1317, in test_C3H2O3
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: test_C3H3O3 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1290, in test_C3H3O3
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 295, in rmgpy.molecule.translator.fromAugmentedInChI
    mol.updateAtomTypes()
  File "rmgpy/molecule/molecule.py", line 1204, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    raise
  File "rmgpy/molecule/molecule.py", line 1199, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    atom.atomType = getAtomType(atom, atom.edges)
  File "rmgpy/molecule/atomtype.py", line 727, in rmgpy.molecule.atomtype.getAtomType
    def getAtomType(atom, bonds):
  File "rmgpy/molecule/atomtype.py", line 763, in rmgpy.molecule.atomtype.getAtomType
    raise AtomTypeError(
AtomTypeError: Unable to determine atom type for atom O., which has 1 single bonds, 1 double bonds to C, 0 double bonds to O, 0 double bonds to S, 0 triple bonds, 0 benzene bonds, 0 lone pairs, and 1 charge.

======================================================================
ERROR: test_C3H4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1332, in test_C3H4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: test_C3H4O4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1305, in test_C3H4O4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: test_C3H6_biradical_parsing (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1145, in test_C3H6_biradical_parsing
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: test_C6H10 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1342, in test_C6H10
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 3] provided in the molecule: multiplicity 3
1  C u0 p0 c0 {2,S} {3,S} {7,S} {8,S}
2  C u0 p0 c0 {1,S} {4,S} {9,S} {10,S}
3  C u0 p0 c0 {1,S} {5,D} {11,S}
4  C u0 p0 c0 {2,S} {6,D} {12,S}
5  C u0 p0 c0 {3,D} {13,S} {14,S}
6  C u0 p0 c0 {4,D} {15,S} {16,S}
7  H u0 p0 c0 {1,S}
8  H u0 p0 c0 {1,S}
9  H u0 p0 c0 {2,S}
10 H u0 p0 c0 {2,S}
11 H u0 p0 c0 {3,S}
12 H u0 p0 c0 {4,S}
13 H u0 p0 c0 {5,S}
14 H u0 p0 c0 {5,S}
15 H u0 p0 c0 {6,S}
16 H u0 p0 c0 {6,S}
.

======================================================================
ERROR: test_C6H6O4 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1310, in test_C6H6O4
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 289, in rmgpy.molecule.translator.fromAugmentedInChI
    mol = fromInChI(mol, aug_inchi.inchi)
  File "rmgpy/molecule/translator.py", line 268, in rmgpy.molecule.translator.fromInChI
    return _read(mol, inchiutil.INCHI_PREFIX + '/' + inchistr, 'inchi', backend)
  File "rmgpy/molecule/translator.py", line 504, in rmgpy.molecule.translator._read
    raise ValueError("Unable to correctly parse {0} with backend {1}.".format(identifier, backend))
ValueError: Unable to correctly parse InChI=1/C6H6O4/c1-2-4-9-6(7)3-5-10-8/h2-3H,1,5H2 with backend try-all.

======================================================================
ERROR: test_C6H6O6 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1322, in test_C6H6O6
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [2, 3, 8, 9] provided in the molecule: multiplicity 5
1  O u0 p2 c0 {10,S} {12,D}
2  O u0 p2 c0 {5,S} {7,S}
3  O u0 p2 c0 {6,S} {8,S}
4  O u0 p2 c0 {10,S} {18,S}
5  O u0 p3 c-1 {2,S}
6  O u0 p3 c-1 {3,S}
7  C u0 p0 c0 {2,S} {9,S} {13,S} {14,S}
8  C u0 p0 c0 {3,S} {11,S} {15,S} {16,S}
9  C u0 p0 c0 {7,S} {12,D} {17,S}
10 C u0 p0 c0 {1,S} {4,S} {11,D}
11 C u0 p0 c+1 {8,S} {10,D}
12 C u0 p0 c0 {1,D} {9,D}
13 H u0 p0 c0 {7,S}
14 H u0 p0 c0 {7,S}
15 H u0 p0 c0 {8,S}
16 H u0 p0 c0 {8,S}
17 H u0 p0 c0 {9,S}
18 H u0 p0 c0 {4,S}
.

======================================================================
ERROR: test_C6H8 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1337, in test_C6H8
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 1, 3, 3] provided in the molecule: multiplicity 5
1  C u0 p0 c0 {2,S} {3,S} {7,S} {8,S}
2  C u0 p0 c0 {1,S} {5,S} {9,S} {10,S}
3  C u0 p0 c0 {1,S} {4,D} {11,S}
4  C u0 p0 c0 {3,D} {12,S} {13,S}
5  C u0 p0 c0 {2,S} {6,T}
6  C u0 p0 c0 {5,T} {14,S}
7  H u0 p0 c0 {1,S}
8  H u0 p0 c0 {1,S}
9  H u0 p0 c0 {2,S}
10 H u0 p0 c0 {2,S}
11 H u0 p0 c0 {3,S}
12 H u0 p0 c0 {4,S}
13 H u0 p0 c0 {4,S}
14 H u0 p0 c0 {6,S}
.

======================================================================
ERROR: test_C6H8O2 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1285, in test_C6H8O2
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1160, in rmgpy.molecule.inchi.fix_molecule
    _check_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1122, in rmgpy.molecule.inchi._check_molecule
    ConsistencyChecker.check_multiplicity(mol.getRadicalCount(), mol.multiplicity)
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlist.py", line 123, in check_multiplicity
    raise InvalidAdjacencyListError('Multiplicity {0} not in agreement with total number of radicals {1}.'.format(multiplicity, nRad))
InvalidAdjacencyListError: Multiplicity 3 not in agreement with total number of radicals 1.

======================================================================
ERROR: test_CCCO_triplet (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1275, in test_CCCO_triplet
    self.assertEqual(Species(molecule=[Molecule().fromAugmentedInChI(aug_inchi)]).isIsomorphic(spc), True)
  File "rmgpy/molecule/molecule.py", line 1479, in rmgpy.molecule.molecule.Molecule.fromAugmentedInChI
    translator.fromAugmentedInChI(self, aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2] provided in the molecule: multiplicity 3
1 O u0 p2 c0 {4,D}
2 C u0 p0 c0 {3,D} {4,S} {5,S}
3 C u0 p0 c0 {2,D} {6,S} {7,S}
4 C u0 p0 c0 {1,D} {2,S} {8,S}
5 H u0 p0 c0 {2,S}
6 H u0 p0 c0 {3,S}
7 H u0 p0 c0 {3,S}
8 H u0 p0 c0 {4,S}
.

======================================================================
ERROR: test_CH2O2 (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1295, in test_CH2O2
    self.compare(inchi, u_indices)
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1098, in compare
    mol = fromAugmentedInChI(Molecule(), aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 293, in rmgpy.molecule.translator.fromAugmentedInChI
    inchiutil.fix_molecule(mol, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1130, in rmgpy.molecule.inchi.fix_molecule
    def fix_molecule(mol, aug_inchi):
  File "rmgpy/molecule/inchi.py", line 1158, in rmgpy.molecule.inchi.fix_molecule
    _fix_unsaturated_bond(mol, u_indices, aug_inchi)
  File "rmgpy/molecule/inchi.py", line 1102, in rmgpy.molecule.inchi._fix_unsaturated_bond
    mol = _fix_unsaturated_bond_to_biradical(mol, aug_inchi.inchi, indices)
  File "rmgpy/molecule/inchi.py", line 1075, in rmgpy.molecule.inchi._fix_unsaturated_bond_to_biradical
    raise Exception(
Exception: Could not convert an unsaturated bond into a biradical for the             indices [1, 2] provided in the molecule: multiplicity 3
1 O u0 p2 c0 {3,S} {5,S}
2 O u0 p2 c0 {3,D}
3 C u0 p0 c0 {1,S} {2,D} {4,S}
4 H u0 p0 c0 {3,S}
5 H u0 p0 c0 {1,S}
.

======================================================================
ERROR: test_CO_triplet (rmgpy.molecule.translatorTest.InChIParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1254, in test_CO_triplet
    self.assertEqual(Species(molecule=[Molecule().fromAugmentedInChI(aug_inchi)]).isIsomorphic(spc), True)
  File "rmgpy/molecule/molecule.py", line 1479, in rmgpy.molecule.molecule.Molecule.fromAugmentedInChI
    translator.fromAugmentedInChI(self, aug_inchi)
  File "rmgpy/molecule/translator.py", line 271, in rmgpy.molecule.translator.fromAugmentedInChI
    def fromAugmentedInChI(mol, aug_inchi):
  File "rmgpy/molecule/translator.py", line 295, in rmgpy.molecule.translator.fromAugmentedInChI
    mol.updateAtomTypes()
  File "rmgpy/molecule/molecule.py", line 1204, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    raise
  File "rmgpy/molecule/molecule.py", line 1199, in rmgpy.molecule.molecule.Molecule.updateAtomTypes
    atom.atomType = getAtomType(atom, atom.edges)
  File "rmgpy/molecule/atomtype.py", line 727, in rmgpy.molecule.atomtype.getAtomType
    def getAtomType(atom, bonds):
  File "rmgpy/molecule/atomtype.py", line 763, in rmgpy.molecule.atomtype.getAtomType
    raise AtomTypeError(
AtomTypeError: Unable to determine atom type for atom O.., which has 0 single bonds, 1 double bonds to C, 0 double bonds to O, 0 double bonds to S, 0 triple bonds, 0 benzene bonds, 0 lone pairs, and 1 charge.

======================================================================
ERROR: Test that a Species containing a non-representative resonance structure is isomorphic
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/speciesTest.py", line 232, in test_is_isomorphic_to_filtered_resonance_structure
    self.assertTrue(spc1_correct.isIsomorphic(spc1_nonrepresentative, generate_res=True))
  File "rmgpy/species.py", line 181, in rmgpy.species.Species.isIsomorphic
    def isIsomorphic(self, other, generate_res=False, generateInitialMap=False):
  File "rmgpy/species.py", line 201, in rmgpy.species.Species.isIsomorphic
    other_copy.generate_resonance_structures(keep_isomorphic=False)
  File "rmgpy/species.py", line 168, in rmgpy.species.Species.generate_resonance_structures
    def generate_resonance_structures(self, keep_isomorphic=True, filter_structures=True):
  File "rmgpy/species.py", line 178, in rmgpy.species.Species.generate_resonance_structures
    self.molecule = self.molecule[0].generate_resonance_structures(keep_isomorphic=keep_isomorphic,
  File "rmgpy/molecule/molecule.py", line 1889, in rmgpy.molecule.molecule.Molecule.generate_resonance_structures
    def generate_resonance_structures(self, keep_isomorphic=False, filter_structures=True):
  File "rmgpy/molecule/molecule.py", line 1891, in rmgpy.molecule.molecule.Molecule.generate_resonance_structures
    return resonance.generate_resonance_structures(self, keep_isomorphic=keep_isomorphic,
  File "rmgpy/molecule/resonance.py", line 151, in rmgpy.molecule.resonance.generate_resonance_structures
    def generate_resonance_structures(mol, clar_structures=True, keep_isomorphic=False, filter_structures=True):
  File "rmgpy/molecule/resonance.py", line 240, in rmgpy.molecule.resonance.generate_resonance_structures
    return filtration.filter_structures(mol_list, features=features)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 80, in filter_structures
    mark_unreactive_structures(filtered_list, mol_list)
  File "/home/chao/RMG-Py/rmgpy/molecule/filtration.py", line 412, in mark_unreactive_structures
    mol.toSMILES(),filtered_list[0].toSMILES()))
  File "rmgpy/molecule/molecule.py", line 1612, in rmgpy.molecule.molecule.Molecule.toSMILES
    def toSMILES(self):
  File "rmgpy/molecule/molecule.py", line 1626, in rmgpy.molecule.molecule.Molecule.toSMILES
    return translator.toSMILES(self)
  File "rmgpy/molecule/translator.py", line 223, in rmgpy.molecule.translator.toSMILES
    def toSMILES(mol, backend='default'):
  File "rmgpy/molecule/translator.py", line 249, in rmgpy.molecule.translator.toSMILES
    return _write(mol, 'smi', backend='openbabel')
  File "rmgpy/molecule/translator.py", line 539, in rmgpy.molecule.translator._write
    raise ValueError("Unable to generate identifier type {0} with backend {1}.".format(identifier_type, backend))
ValueError: Unable to generate identifier type smi with backend openbabel.

======================================================================
FAIL: adjlist: Check that we can convert back to old style adjacency list
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/adjlistTest.py", line 822, in testToOldAjacencyList
    self.assertEqual(molecule2.toAdjacencyList(removeH=True,oldStyle=True).strip(),string.strip())
AssertionError: '1 C 0 {2,S}\n2 C 1 {1,S} {3,S}\n3 C 0 {2,S} {4,D}\n4 C 0 {3,D} {5,S}\n5 C 0 {4,S} {6,D}\n6 C 0 {5,D}' != '1 C 0 {2,D}\n2 C 0 {1,D} {3,S}\n3 C 0 {2,S} {4,D}\n4 C 0 {3,D} {5,S}\n5 C 1 {4,S} {6,S}\n6 C 0 {5,S}'

======================================================================
FAIL: Test that getAtomType() returns appropriate carbon atom types.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/atomtypeTest.py", line 522, in testCarbonTypes
    self.assertEqual(self.atomType(self.mol1, 0), 'Cs')
AssertionError: 'O2s' != 'Cs'

======================================================================
FAIL: Test that getAtomType() returns appropriate oxygen atom types.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/atomtypeTest.py", line 570, in testOxygenTypes
    self.assertEqual(self.atomType(self.mol1, 1),  'O2s')
AssertionError: 'O2d' != 'O2s'

======================================================================
FAIL: Test that getAtomType() returns appropriate silicon atom types.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/atomtypeTest.py", line 582, in testSiliconTypes
    self.assertEqual(self.atomType(self.mol4, 2), 'Sis')
AssertionError: 'S2d' != 'Sis'

======================================================================
FAIL: Test that getAtomType() returns appropriate sulfur atom types.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/atomtypeTest.py", line 597, in testSulfurTypes
    self.assertEqual(self.atomType(self.mol19, 1), 'S2d')
AssertionError: 'CS' != 'S2d'

======================================================================
FAIL: Test that the isIdentical returns False with butane
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/moleculeTest.py", line 2284, in testIdenticalFalse
    self.assertTrue(mol.isIsomorphic(molCopy))
AssertionError: False is not true

======================================================================
FAIL: Test that the isIdentical method returns False with ethene
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/moleculeTest.py", line 2313, in testIdenticalFalse2
    self.assertTrue(mol.isIsomorphic(molCopy))
AssertionError: False is not true

======================================================================
FAIL: Test that we can round-trip SMILES strings of Kekulized aromatics
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/moleculeTest.py", line 1398, in testKekuleRoundTripSMILES
    self.assertEqual(s, molecule.toSMILES(), "Started with {0} but ended with {1}".format(s, molecule.toSMILES()))
AssertionError: Started with CC1C=CC=CC=1O but ended with CC1=CC=CC=C1O

======================================================================
FAIL: Test the Molecule.toAdjacencyList() method works for atoms with unexpected isotopes.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/moleculeTest.py", line 2145, in testToAdjacencyListWithIsotopes
    self.assertEquals(adjlist, adjlistExp)
AssertionError: '1Ou0p2c0i18{2,S}{6,S}2Cu0p0c0{1,S}{3,S}{4,S}{5,S}3Hu0p0c0{2,S}4Hu0p0c0{2,S}5Hu0p0c0{2,S}6Hu0p0c0{1,S}' != '1Ou0p2c0i18{2,S}{3,S}2Cu0p0c0{1,S}{4,S}{5,S}{6,S}3Hu0p0c0{1,S}4Hu0p0c0{2,S}5Hu0p0c0{2,S}6Hu0p0c0{2,S}'

======================================================================
FAIL: test_3_atoms (rmgpy.molecule.pathfinderTest.DistanceComputingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 388, in test_3_atoms
    self.assertEquals(distances, expected)
AssertionError: {(1, 2): 1, (1, 3): 1, (2, 3): 2} != {(1, 2): 1, (1, 3): 2, (2, 3): 1}
- {(1, 2): 1, (1, 3): 1, (2, 3): 2}
?                     ^          ^

+ {(1, 2): 1, (1, 3): 2, (2, 3): 1}
?                     ^          ^


======================================================================
FAIL: test_HOSO (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 475, in test_HOSO
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_NO2b (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalDelocalizationPaths)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 469, in test_NO2b
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_NS (rmgpy.molecule.pathfinderTest.FindAdjLonePairRadicalMultipleBondDelocalizationPaths)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 505, in test_NS
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_allyl_radical (rmgpy.molecule.pathfinderTest.FindAllylDelocalizationPathsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 399, in test_allyl_radical
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_nitrogenated_birad (rmgpy.molecule.pathfinderTest.FindAllylDelocalizationPathsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 405, in test_nitrogenated_birad
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_13butadiene (rmgpy.molecule.pathfinderTest.FindButadieneTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 44, in test_13butadiene
    self.assertIsNotNone(path)
AssertionError: unexpectedly None

======================================================================
FAIL: test_C4H4 (rmgpy.molecule.pathfinderTest.FindButadieneTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 130, in test_C4H4
    self.assertIsNotNone(path)
AssertionError: unexpectedly None

======================================================================
FAIL: test_N2Ob (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 434, in test_N2Ob
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_NH2CHO (rmgpy.molecule.pathfinderTest.FindLonePairMultipleBondPathsTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 422, in test_NH2CHO
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_HNNOO (rmgpy.molecule.pathfinderTest.FindN5dcRadicalDelocalizationPaths)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 522, in test_HNNOO
    self.assertTrue(paths)
AssertionError: [] is not true

======================================================================
FAIL: test_CCC (rmgpy.molecule.pathfinderTest.ShortestPathTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/pathfinderTest.py", line 345, in test_CCC
    self.assertEquals(len(path), 3)
AssertionError: 2 != 3

======================================================================
FAIL: Test that the _indistinguishable function works properly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/symmetryTest.py", line 727, in test_indistinguishable_2
    self.assertFalse(_indistinguishable(mol.atoms[5], mol.atoms[4]))
AssertionError: True is not false

======================================================================
FAIL: test_fromInChI (rmgpy.molecule.translatorTest.ParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 1068, in test_fromInChI
    self.assertEquals(mol.atoms[1].atomType, atomTypes['N3s'])
AssertionError: <AtomType "Cs"> != <AtomType "N3s">

======================================================================
FAIL: test_fromSMILES (rmgpy.molecule.translatorTest.ParsingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/translatorTest.py", line 825, in test_fromSMILES
    self.assertEquals(mol.atoms[1].atomType, atomTypes['N3s'])
AssertionError: <AtomType "Cs"> != <AtomType "N3s">

======================================================================
FAIL: Test that we can add graphs to the object and that they are sorted
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/chao/RMG-Py/rmgpy/molecule/vf2Test.py", line 63, in test_import_graph
    testing.assert_array_equal(final_connectivity_order,final_connectivity_order2)
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/numpy/testing/utils.py", line 813, in assert_array_equal
    verbose=verbose, header='Arrays are not equal')
  File "/home/chao/anaconda2/envs/rmg_env/lib/python2.7/site-packages/numpy/testing/utils.py", line 739, in assert_array_compare
    raise AssertionError(msg)
AssertionError:
Arrays are not equal

(mismatch 58.3333333333%)
 x: array([ -313, -1175, -1141,  -929,  -878,  -328,  -328,  -326,  -326,
        -326,  -310,  -310])
 y: array([-1175, -1141,  -929,  -878,  -328,  -328,  -326,  -326,  -326,
        -313,  -310,  -310])

Name                                   Stmts   Miss Branch BrPart  Cover
------------------------------------------------------------------------
rmgpy/__init__.py                         64     20     22      7    64%
rmgpy/constraints.py                      55      1     42      2    97%
rmgpy/data/__init__.py                     0      0      0      0   100%
rmgpy/data/base.py                       738    338    348     34    52%
rmgpy/data/kinetics/__init__.py            7      0      0      0   100%
rmgpy/data/kinetics/common.py            224     48    134     19    76%
rmgpy/data/kinetics/database.py          403    197    186     18    50%
rmgpy/data/kinetics/depository.py         71     22     24      4    66%
rmgpy/data/kinetics/family.py           2165    867   1260    152    58%
rmgpy/data/kinetics/groups.py            330    276    196      4    14%
rmgpy/data/kinetics/library.py           405    208    200     21    44%
rmgpy/data/kinetics/rules.py             382    167    172     15    55%
rmgpy/data/reference.py                  138    109     48      0    16%
rmgpy/data/rmg.py                        123     30     38      5    78%
rmgpy/data/solvation.py                  439    151    110      5    66%
rmgpy/data/statmech.py                   303    215    104      4    24%
rmgpy/data/statmechfit.py                259    225     76      0    10%
rmgpy/data/thermo.py                    1203    401    584     58    66%
rmgpy/data/transport.py                  275    101     82      9    61%
rmgpy/display.py                           8      3      6      1    57%
rmgpy/exceptions.py                       81      8      0      0    90%
rmgpy/kinetics/__init__.py                 7      0      0      0   100%
rmgpy/kinetics/diffusionLimited.py        72      5     16      2    92%
rmgpy/kinetics/uncertainies.py             4      0      2      0   100%
rmgpy/ml/__init__.py                       0      0      0      0   100%
rmgpy/ml/estimator.py                     41      0      4      1    98%
rmgpy/molecule/__init__.py                 4      0      0      0   100%
rmgpy/molecule/adjlist.py                617     95    405     52    82%
rmgpy/molecule/atomtypedatabase.py        70     43      4      0    36%
rmgpy/molecule/draw.py                  1042    985    508      0     4%
rmgpy/molecule/filtration.py             180     12    132      9    93%
rmgpy/pdep/__init__.py                     5      0      0      0   100%
rmgpy/pdep/draw.py                       298    284     86      0     4%
rmgpy/pdep/network.py                    584    504    256      7    10%
rmgpy/qm/__init__.py                       0      0      0      0   100%
rmgpy/qm/gaussian.py                     150    109     56      2    23%
rmgpy/qm/main.py                          95     31     34      9    61%
rmgpy/qm/molecule.py                     222    174     48      0    18%
rmgpy/qm/mopac.py                        169    120     62      4    24%
rmgpy/qm/qmdata.py                        34     15      2      0    53%
rmgpy/qm/qmverifier.py                    27     20      6      0    21%
rmgpy/qm/symmetry.py                      82     12     18      4    82%
rmgpy/reduction/__init__.py                0      0      0      0   100%
rmgpy/reduction/input.py                  32     27      2      0    15%
rmgpy/reduction/main.py                   46     35      8      0    20%
rmgpy/reduction/model.py                  33     11      4      0    59%
rmgpy/reduction/optimization.py           51     42     12      0    14%
rmgpy/reduction/output.py                 10      5      0      0    50%
rmgpy/reduction/rates.py                  62     53     24      0    10%
rmgpy/reduction/reduction.py             136    108     40      2    17%
rmgpy/restart.py                          32      9      6      2    66%
rmgpy/rmg/__init__.py                      2      0      0      0   100%
rmgpy/rmg/input.py                       541    306    251     41    41%
rmgpy/rmg/listener.py                     29      0      2      0   100%
rmgpy/rmg/main.py                       1223    909    592     43    21%
rmgpy/rmg/model.py                      1092    591    592     63    41%
rmgpy/rmg/output.py                      193     69     82     19    60%
rmgpy/rmg/pdep.py                        465    376    286     14    15%
rmgpy/rmg/react.py                        51      8     32      3    75%
rmgpy/rmg/settings.py                     45      4     10      4    85%
rmgpy/scoop_framework/__init__.py          0      0      0      0   100%
rmgpy/scoop_framework/framework.py        77     54     10      0    26%
rmgpy/scoop_framework/util.py             65     21      4      1    65%
rmgpy/solver/__init__.py                   4      0      0      0   100%
rmgpy/statmech/__init__.py                 5      0      0      0   100%
rmgpy/stats.py                           116     45     22      2    63%
rmgpy/thermo/__init__.py                   3      0      0      0   100%
rmgpy/thermo/thermoengine.py              78      7     32      6    86%
rmgpy/tools/__init__.py                    0      0      0      0   100%
rmgpy/tools/canteraModel.py              355    197    184     21    38%
rmgpy/tools/data.py                       14      2      4      2    78%
rmgpy/tools/diff_models.py               228    124     96     19    44%
rmgpy/tools/extractInfoFromckcsv.py      157    150     80      0     3%
rmgpy/tools/fluxdiagram.py               341    308    176      0     6%
rmgpy/tools/fluxtest.py                   37     25      2      0    36%
rmgpy/tools/generate_reactions.py         30     21      6      0    25%
rmgpy/tools/isotopes.py                  459    208    248     21    54%
rmgpy/tools/loader.py                    112     62     76      8    41%
rmgpy/tools/merge_models.py               63     54     16      0    11%
rmgpy/tools/muq.py                       210    191     90      0     6%
rmgpy/tools/observablesRegression.py     149    136     70      0     6%
rmgpy/tools/plot.py                      334    158    168     26    46%
rmgpy/tools/regression.py                 84     59      6      0    28%
rmgpy/tools/simulate.py                   53      6     20      6    84%
rmgpy/tools/uncertainty.py               395    212    240     18    42%
rmgpy/transport.py                        47      4      6      1    91%
rmgpy/util.py                             33     15      8      1    51%
rmgpy/version.py                           2      0      0      0   100%
------------------------------------------------------------------------
TOTAL                                  18870  10408   8778    771    42%
----------------------------------------------------------------------
Ran 1542 tests in 218.121s

FAILED (SKIP=43, errors=45, failures=25)
Makefile:95: recipe for target 'test' failed
make: *** [test] Error 1
